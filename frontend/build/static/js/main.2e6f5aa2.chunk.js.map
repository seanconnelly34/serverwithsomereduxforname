{"version":3,"sources":["components/header/Header.js","utils/NewDate.js","forms/registration/state.js","forms/registration/components/PersonalInfo.js","forms/registration/components/MedicalHistory.js","forms/registration/components/MedicalHistory2.js","forms/registration/components/Allergies.js","forms/registration/components/Medications.js","forms/registration/components/Comments.js","forms/registration/index.js","forms/covid/state.js","forms/covid/components/Risk.js","forms/covid/components/Paragrapgh.js","forms/covid/components/Section1.js","forms/covid/components/Section2.js","forms/covid/components/Section3.js","forms/covid/index.js","forms/aesthetics/statePersonal.js","forms/aesthetics/components/Personal.js","forms/aesthetics/components/MedicalHistory.js","forms/aesthetics/components/Lifestyle.js","forms/aesthetics/components/Skin.js","forms/aesthetics/components/Sun.js","forms/aesthetics/components/Genetic.js","forms/aesthetics/index.js","forms/consent/state.js","forms/consent/components/Physicians.js","forms/consent/components/Patient.js","forms/consent/components/Appendix.js","forms/consent/index.js","forms/index.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js","assets/landings-logo.svg"],"names":["Header","className","Container","Grid","container","item","xs","sm","md","lg","src","Logo","alt","style","backgroundColor","padding","width","maxWidth","margin","marginTop","textDecoration","href","Button","fontSize","color","fontWeight","border","variant","type","onClick","NewDate","dateObj","Date","getMonth","getDate","getFullYear","date","name","dob","age","healthcard","effectivedate","expirydate","streetaddress","city","province","postal","homephone","workphone","cellphone","email","occupation","famphysician","contacted","hearofus","heartattack","heartattackDate","heartdisease","heartdiseaseDate","chestpain","chestpainDate","stroke","strokeDate","bloodclots","bloodclotsDate","bleeding","bleedingDate","bloodpressure","bloodpressureDate","kidneydisease","kidneydiseaseDate","openingmouth","openingmouthDate","diabetes","diabetesDate","arthritis","arthritisDate","asthma","asthmaDate","seizures","seizuresDate","thyroid","thyroidDate","liversisease","liversiseaseDate","hiv","hivDate","despression","depressionDate","sleepApnea","sleepApneaOther","doSmoke","smokeNumn","didSmoke","smokeQuit","height","weight","pregnancy","prevSurg1","prevSurg2","prevSurg3","prevSurg4","allergicMed","whichMed","allergicFood","whichFood","allergicLatex","allergicIodine","hyperthermia","anesthetic","anestheticDescribe","medication1","medication2","medication3","medication4","medication5","medication6","promotions","skinCare","comments","PersonalInfo","props","disabled","fullWidth","label","onChange","onInputChange","placeholder","value","validators","errorMessages","inputProps","InputLabelProps","state","MedicalHistory","FormControl","component","FormControlLabel","control","Checkbox","checked","onCheck","labelPlacement","depression","RadioGroup","row","aria-label","defaultValue","Radio","length","firstSubmit","MedicalHistory2","Allergies","Medications","console","log","Comments","multiline","rows","rowsMax","useStyles","makeStyles","theme","root","flexGrow","paper","spacing","textAlign","palette","text","secondary","Registration","useState","setFirstSubmit","done","setDone","State","setState","result","setResult","trimmedSignature","setTrimmedSignature","classes","sigPad","event","target","onSubmit","preventDefault","axios","post","headers","then","response","data","setRegistrationDone","catch","success","message","e","prevState","direction","justify","alignItems","penColor","canvasProps","ref","marginBottom","clear","getTrimmedCanvas","toDataURL","cough","fever","throat","headache","nose","sneeze","smellTaste","breath","aches","fatigue","lesions","diarrhea","day14Travel","closeContact","clusterHub","covidRisk","tested","dateOfSwab","other","verifiedBy","updateBy","Risk","Paragraph","marginBotto","Section1","fontStyle","fatique","Section2","Covid","custerHub","setCovidDone","Section3","allergies","currentMeds","skinCancer","cancerWhen","cancerType1","cancerType2","cancerType3","tmj","constipation","crohns","heartDisease","contactLenses","hearingAids","anxiety","ocd","cancer","epilepsy","hep","lupus","herpes","birthControl","birthLong","menopause","preg","breastfeeding","ovaries","hormone","hyster","hysterWhen","derma","dermaReason","accutane","anitbiotics","retin","retinStrength","hydro","hydroStrength","medLength","botox","resty","artecoll","laserSurface","laserRemove","thermage","ipl","injectAreas","injectHappy","facials","microderm","chempeel","lacticPeel","salicPeel","lastTreat","peelHapppy","fullpart","children","stress","stressWell","sleepHours","diet","vitamins","coffee","water","alcohol","cigs","cardio","weights","stretch","exerciseOften","acne","blackheads","eczema","whiteheads","senskin","pigment","rosacea","congskin","elastic","psoriasis","sundamage","uneventext","scars","darkCircles","pores","ros","vitiligo","aging","dermatitis","freckles","scarsNoAcne","backne","dryskin","wrinkles","sebhorrea","puffy","capilaries","concern1","concern2","concern3","sunReact","darkSkin","sunblister","blisterArea","tanhow","tanoften","skincolor","ethnic","eyecolor","haircolor","Lifestyle","Skin","Sun","Genetic","Aesthetics","StatePersonal","setAestheticsDone","Personal","address","homePhone","mobilePhone","std","mental","disability","substanceAbuse","otherDescription","Physicians","Patient","Appendix","marginLeft","Consent","setConsentDone","minWidth","TabPanel","index","role","hidden","id","aria-labelledby","Box","p","Typography","a11yProps","background","Forms","React","covidDone","registrationDone","aestheticsDone","consentDone","useTheme","setValue","covidTab","icon","faCheck","size","regTab","aestheticTab","consentTab","AppBar","position","Tabs","newValue","indicatorColor","textColor","centered","Tab","axis","onChangeIndex","dir","Footer","App","Boolean","window","location","hostname","match","defaults","baseURL","process","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.2e6f5aa2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Logo from \"../../assets/landings-logo.svg\";\r\nimport \"./styles.css\";\r\n\r\nimport { Button, Grid, Container } from \"@material-ui/core\";\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <div className=\"background\">\r\n        <Container>\r\n          <Grid container>\r\n            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n              <img className=\"logoMobile\" src={Logo} alt=\"landings logo\" />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#6C0D0D\",\r\n                  padding: \"14px 14px\",\r\n                  width: \"auto\",\r\n                  maxWidth: \"280px\",\r\n                  margin: \"auto\",\r\n                  marginTop: \"76px\",\r\n                }}\r\n              >\r\n                <a\r\n                  style={{ textDecoration: \"none\" }}\r\n                  href=\"https://www.landingsurgery.ca/\"\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      fontSize: \"20px\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      border: \".5px solid hsla(0,0%,100%,.5)\",\r\n                      padding: \"14px 40px\",\r\n                      backgroundColor: \"#6C0D0D\",\r\n                    }}\r\n                    variant=\"primary\"\r\n                    type=\"button\"\r\n                    onClick=\"\"\r\n                  >\r\n                    Back to Website\r\n                  </Button>\r\n                </a>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const NewDate = () => {\r\n  const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  var dateObj = new Date();\r\n  var month = monthNames[dateObj.getMonth()];\r\n  var day = dateObj.getDate();\r\n  var year = dateObj.getFullYear();\r\n\r\n  const newdate = month + \" \" + day + \", \" + year;\r\n\r\n  return newdate;\r\n};\r\n\r\nexport default NewDate;\r\n","import NewDate from \"../../utils/NewDate\";\r\n\r\nexport default {\r\n  date: NewDate(),\r\n  name: \"\",\r\n  dob: \"\",\r\n  age: \"\",\r\n  healthcard: \"\",\r\n  effectivedate: \"\",\r\n  expirydate: \"\",\r\n  streetaddress: \"\",\r\n  city: \"\",\r\n  province: \"\",\r\n  postal: \"\",\r\n  homephone: \"\",\r\n  workphone: \"\",\r\n  cellphone: \"\",\r\n  email: \"\",\r\n  occupation: \"\",\r\n  famphysician: \"\",\r\n  contacted: \"\",\r\n  hearofus: \"\",\r\n  heartattack: false,\r\n  heartattackDate: \"\",\r\n  heartdisease: false,\r\n  heartdiseaseDate: \"\",\r\n  chestpain: false,\r\n  chestpainDate: \"\",\r\n  stroke: false,\r\n  strokeDate: \"\",\r\n  bloodclots: false,\r\n  bloodclotsDate: \"\",\r\n  bleeding: false,\r\n  bleedingDate: \"\",\r\n  bloodpressure: false,\r\n  bloodpressureDate: \"\",\r\n  kidneydisease: false,\r\n  kidneydiseaseDate: \"\",\r\n  openingmouth: false,\r\n  openingmouthDate: \"\",\r\n  diabetes: false,\r\n  diabetesDate: \"\",\r\n  arthritis: false,\r\n  arthritisDate: \"\",\r\n  asthma: false,\r\n  asthmaDate: \"\",\r\n  seizures: false,\r\n  seizuresDate: \"\",\r\n  thyroid: false,\r\n  thyroidDate: \"\",\r\n  liversisease: false,\r\n  liversiseaseDate: \"\",\r\n  hiv: false,\r\n  hivDate: \"\",\r\n  despression: false,\r\n  depressionDate: \"\",\r\n  sleepApnea: \"\",\r\n  sleepApneaOther: \"\",\r\n  doSmoke: \"\",\r\n  smokeNumn: \"\",\r\n  didSmoke: \"\",\r\n  smokeQuit: \"\",\r\n  height: \"\",\r\n  weight: \"\",\r\n  pregnancy: \"\",\r\n  prevSurg1: \"\",\r\n  prevSurg2: \"\",\r\n  prevSurg3: \"\",\r\n  prevSurg4: \"\",\r\n  allergicMed: \"\",\r\n  whichMed: \"\",\r\n  allergicFood: \"\",\r\n  whichFood: \"\",\r\n  allergicLatex: \"\",\r\n  allergicIodine: \"\",\r\n  hyperthermia: \"\",\r\n  anesthetic: \"\",\r\n  anestheticDescribe: \"\",\r\n  medication1: \"\",\r\n  medication2: \"\",\r\n  medication3: \"\",\r\n  medication4: \"\",\r\n  medication5: \"\",\r\n  medication6: \"\",\r\n  promotions: \"\",\r\n  skinCare: \"\",\r\n  comments: \"\",\r\n};\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\nimport NewDate from \"../../../utils/NewDate\";\r\nconst PersonalInfo = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h1>Personal Info</h1>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          disabled\r\n          fullWidth\r\n          label=\"Date\"\r\n          onChange={props.onInputChange}\r\n          placeholder={NewDate()}\r\n          name=\"date\"\r\n          value={NewDate()}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Date is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Name\"\r\n          onChange={props.onInputChange}\r\n          name=\"name\"\r\n          value={props.state.name}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Name is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Date of Birth (YYYY/MM/DD)\"\r\n          onChange={props.onInputChange}\r\n          name=\"dob\"\r\n          placeholder=\"YYYY/MM/DD\"\r\n          value={props.state.dob}\r\n          validators={[\"minStringLength:10\", \"maxStringLength:10\"]}\r\n          errorMessages={[\r\n            \"This field is required\",\r\n            \"Date of birth is not valid\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Age\"\r\n          onChange={props.onInputChange}\r\n          name=\"age\"\r\n          value={props.state.age}\r\n          validators={[\"isNumber\", \"minStringLength:2\", \"maxStringLength:2\"]}\r\n          errorMessages={[\r\n            \"Must be a number.\",\r\n            \"Age is not valid\",\r\n            \"Age is not valid\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Provincial Health #\"\r\n          onChange={props.onInputChange}\r\n          name=\"healthcard\"\r\n          value={props.state.healthcard}\r\n          validators={[\"minStringLength:8\", \"maxStringLength:12\"]}\r\n          errorMessages={[\"Number is not valid\", \"Number is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Effective Date (YYYY/MM/DD)\"\r\n          placeholder=\"(YYYY/MM/DD)\"\r\n          onChange={props.onInputChange}\r\n          name=\"effectivedate\"\r\n          value={props.state.effectivedate}\r\n          validators={[\"minStringLength:10\", \"maxStringLength:10\"]}\r\n          errorMessages={[\"Date is not valid\", \"Date is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Expiry Date (YYYY/MM/DD)\"\r\n          placeholder=\"(YYYY/MM/DD)\"\r\n          onChange={props.onInputChange}\r\n          name=\"expirydate\"\r\n          value={props.state.expirydate}\r\n          validators={[\"minStringLength:10\", \"maxStringLength:10\"]}\r\n          errorMessages={[\"Date is not valid\", \"Date is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Street Address\"\r\n          onChange={props.onInputChange}\r\n          name=\"streetaddress\"\r\n          value={props.state.streetaddress}\r\n          validators={[\"minStringLength:5\", \"maxStringLength:50\"]}\r\n          errorMessages={[\"Enter your address\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"City\"\r\n          onChange={props.onInputChange}\r\n          name=\"city\"\r\n          value={props.state.city}\r\n          validators={[\"minStringLength:4\", \"maxStringLength:30\"]}\r\n          errorMessages={[\"Enter your city\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Province\"\r\n          onChange={props.onInputChange}\r\n          name=\"province\"\r\n          value={props.state.province}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"Enter your province\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Postal Code\"\r\n          onChange={props.onInputChange}\r\n          name=\"postal\"\r\n          value={props.state.postal}\r\n          validators={[\"minStringLength:5\", \"maxStringLength:9\"]}\r\n          errorMessages={[\"Enter your postal code\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Home Phone (include area code)\"\r\n          onChange={props.onInputChange}\r\n          name=\"homephone\"\r\n          value={props.state.homephone}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:16\"]}\r\n          errorMessages={[\r\n            \"Enter your home phone number with area code\",\r\n            \"Too long\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Work Phone (include area code)\"\r\n          onChange={props.onInputChange}\r\n          name=\"workphone\"\r\n          value={props.state.workphone}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:16\"]}\r\n          errorMessages={[\r\n            \"Enter your work phone number with area code\",\r\n            \"Too long\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Cell Phone (include area code)\"\r\n          onChange={props.onInputChange}\r\n          name=\"cellphone\"\r\n          value={props.state.cellphone}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:16\"]}\r\n          errorMessages={[\"Enter a valid phone number\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Email\"\r\n          onChange={props.onInputChange}\r\n          name=\"email\"\r\n          value={props.state.email}\r\n          validators={[\r\n            \"required\",\r\n            \"isEmail\",\r\n            \"minStringLength:9\",\r\n            \"maxStringLength:40\",\r\n          ]}\r\n          errorMessages={[\r\n            \"This field is required\",\r\n            \"email is not valid\",\r\n            \"email is not valid\",\r\n            \"email is too long\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Occupation\"\r\n          onChange={props.onInputChange}\r\n          name=\"occupation\"\r\n          value={props.state.occupation}\r\n          validators={[\"minStringLength:5\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"Enter your occupation\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Family Physician\"\r\n          onChange={props.onInputChange}\r\n          name=\"famphysician\"\r\n          value={props.state.famphysician}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"Enter your Family Physician\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"How would you like to be contacted?\"\r\n          onChange={props.onInputChange}\r\n          name=\"contacted\"\r\n          value={props.state.contacted}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"How would you like to be contacted?\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"How did you hear of us?\"\r\n          onChange={props.onInputChange}\r\n          name=\"hearofus\"\r\n          value={props.state.hearofus}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"How did you hear of us?\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonalInfo;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\n\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst MedicalHistory = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h1>Medical History</h1>\r\n        <h2>Have you ever had any of the following?</h2>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.heartattack}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.heartattack}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"heartattack\"\r\n                  />\r\n                }\r\n                label=\"Heart Attack\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"heartattackDate\"\r\n                value={props.state.heartattackDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.heartdisease}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.heartdisease}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"heartdisease\"\r\n                  />\r\n                }\r\n                label=\"Heart Disease\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"heartdiseaseDate\"\r\n                value={props.state.heartdiseaseDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.chestpain}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.chestpain}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"chestpain\"\r\n                  />\r\n                }\r\n                label=\"Chest Pain\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"chestpainDate\"\r\n                value={props.state.chestpainDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.stroke}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.stroke}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"stroke\"\r\n                  />\r\n                }\r\n                label=\"Stroke\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"strokeDate\"\r\n                value={props.state.strokeDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.bloodclots}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.bloodclots}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"bloodclots\"\r\n                  />\r\n                }\r\n                label=\"Blood Clots\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"bloodclotsDate\"\r\n                value={props.state.bloodclotsDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.bleeding}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.bleeding}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"bleeding\"\r\n                  />\r\n                }\r\n                label=\"Prolonged Bleeding\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"bleedingDate\"\r\n                value={props.state.bleedingDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.bloodpressure}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.bloodpressure}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"bloodpressure\"\r\n                  />\r\n                }\r\n                label=\"High Blood Pressure\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"bloodpressureDate\"\r\n                value={props.state.bloodpressureDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.kidneydisease}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.kidneydisease}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"kidneydisease\"\r\n                  />\r\n                }\r\n                label=\"Kideny Disease\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"kidneydiseaseDate\"\r\n                value={props.state.kidneydiseaseDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.openingmouth}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.openingmouth}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"openingmouth\"\r\n                  />\r\n                }\r\n                label=\"Trouble Opening Mouth\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"openingmouthDate\"\r\n                value={props.state.openingmouthDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.diabetes}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.diabetes}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"diabetes\"\r\n                  />\r\n                }\r\n                label=\"Diabetes\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"diabetesDate\"\r\n                value={props.state.diabetesDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.arthritis}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.arthritis}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"arthritis\"\r\n                  />\r\n                }\r\n                label=\"Arthritis\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"arthritisDate\"\r\n                value={props.state.arthritisDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.asthma}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.asthma}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"asthma\"\r\n                  />\r\n                }\r\n                label=\"Asthma/Bronchitis\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"asthmaDate\"\r\n                value={props.state.asthmaDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.seizures}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.seizures}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"seizures\"\r\n                  />\r\n                }\r\n                label=\"Seizures\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"seizuresDate\"\r\n                value={props.state.seizuresDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.thyroid}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.thyroid}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"thyroid\"\r\n                  />\r\n                }\r\n                label=\"Thyroid Disease\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"thyroidDate\"\r\n                value={props.state.thyroidDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.liversisease}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.liversisease}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"liversisease\"\r\n                  />\r\n                }\r\n                label=\"Liver Disease\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"liversiseaseDate\"\r\n                value={props.state.liversiseaseDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.hiv}\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    checked={props.state.hiv}\r\n                    onChange={props.onCheck}\r\n                    name=\"hiv\"\r\n                  />\r\n                }\r\n                label=\"HIV/Hepatitis\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"hivDate\"\r\n                value={props.state.hivDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.depression}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.depression}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"depression\"\r\n                  />\r\n                }\r\n                label=\"Depression\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"depressionDate\"\r\n                value={props.state.depressionDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>Do you have, or have you ever been tested for Sleep Apnea?</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"sleepApnea\"\r\n              value={props.state.sleepApnea}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.sleepApnea.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Other (Please List):\"\r\n          onChange={props.onInputChange}\r\n          name=\"sleepApneaOther\"\r\n          value={props.state.sleepApneaOther}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6} container>\r\n        <Grid>\r\n          <h3>Do you smoke?</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"doSmoke\"\r\n              value={props.state.doSmoke}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.doSmoke.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"If yes, how many per day?\"\r\n          onChange={props.onInputChange}\r\n          name=\"smokeNumn\"\r\n          value={props.state.smokeNumn}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6} container>\r\n        <Grid>\r\n          <h3>Did you smoke?</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"didSmoke\"\r\n              value={props.state.didSmoke}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.didSmoke.length < 1 &&\r\n          props.firstSubmit === true &&\r\n          props.state.didSmoke === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"If you quit, when?\"\r\n          onChange={props.onInputChange}\r\n          name=\"smokeQuit\"\r\n          value={props.state.smokeQuit}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistory;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\n\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst MedicalHistory2 = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"What is your height?\"\r\n          onChange={props.onInputChange}\r\n          name=\"height\"\r\n          value={props.state.height}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"What is your current weight?\"\r\n          onChange={props.onInputChange}\r\n          name=\"weight\"\r\n          value={props.state.weight}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>Possibility of pregnancy?</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"pregnancy\"\r\n              value={props.state.pregnancy}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.pregnancy.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12}>\r\n        <h3>Please list any previous surgeries.</h3>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"1.\"\r\n          onChange={props.onInputChange}\r\n          name=\"prevSurg1\"\r\n          value={props.state.prevSurg1}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:60\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"2.\"\r\n          onChange={props.onInputChange}\r\n          name=\"prevSurg2\"\r\n          value={props.state.prevSurg2}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:60\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"3.\"\r\n          onChange={props.onInputChange}\r\n          name=\"prevSurg3\"\r\n          value={props.state.prevSurg3}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:60\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"4.\"\r\n          onChange={props.onInputChange}\r\n          name=\"prevSurg4\"\r\n          value={props.state.prevSurg4}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:60\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistory2;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\n\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst Allergies = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h2>ALLERGIES:</h2>\r\n        <h3>Are you allergic to any of the following?</h3>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid item xs={12} sm={12} lg={2}>\r\n          <h3>Medications</h3>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} lg={10}>\r\n          <Grid className=\"yesno\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                defaultValue=\"top\"\r\n                name=\"allergicMed\"\r\n                value={props.state.allergicMed}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Yes\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Yes\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"No\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"No\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Unsure\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Unsure\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            {props.state.allergicMed.length < 1 &&\r\n            props.firstSubmit === true ? (\r\n              <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Which Medications?\"\r\n          onChange={props.onInputChange}\r\n          name=\"whichMed\"\r\n          value={props.state.whichMed}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:50\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid item xs={12} sm={12} lg={2}>\r\n          <h3>Food</h3>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} lg={10}>\r\n          <Grid className=\"yesno\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                defaultValue=\"top\"\r\n                name=\"allergicFood\"\r\n                value={props.state.allergicFood}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Yes\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Yes\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"No\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"No\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Unsure\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Unsure\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            {props.state.allergicFood.length < 1 &&\r\n            props.firstSubmit === true ? (\r\n              <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Which Foods?\"\r\n          onChange={props.onInputChange}\r\n          name=\"whichFood\"\r\n          value={props.state.whichFood}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:50\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid item xs={12} sm={12} lg={2}>\r\n          <h3>Latex</h3>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} lg={10}>\r\n          <Grid className=\"yesno\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                defaultValue=\"top\"\r\n                name=\"allergicLatex\"\r\n                value={props.state.allergicLatex}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Yes\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Yes\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"No\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"No\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Unsure\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Unsure\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            {props.state.allergicLatex.length < 1 &&\r\n            props.firstSubmit === true ? (\r\n              <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid item xs={12} sm={12} lg={2}>\r\n          <h3>Iodine</h3>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} lg={10}>\r\n          <Grid className=\"yesno\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                defaultValue=\"top\"\r\n                name=\"allergicIodine\"\r\n                value={props.state.allergicIodine}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Yes\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Yes\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"No\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"No\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Unsure\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Unsure\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            {props.state.allergicIodine.length < 1 &&\r\n            props.firstSubmit === true ? (\r\n              <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>\r\n            Do you or your relatives have a history of malignant hyperthermia?\r\n          </h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"hyperthermia\"\r\n              value={props.state.hyperthermia}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.hyperthermia.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>Have you or your relatives had problems with anesthetic?</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"anesthetic\"\r\n              value={props.state.anesthetic}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.anesthetic.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"If yes, please describe.\"\r\n          onChange={props.onInputChange}\r\n          name=\"anestheticDescribe\"\r\n          value={props.state.anestheticDescribe}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:50\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Allergies;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\n\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst Medications = (props) => {\r\n  const fontSize = 19;\r\n  console.log(props.firstSubmit, \"INSIDE COMPONDENT\");\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h2>MEDICATIONS:</h2>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>\r\n            Please list all medications that you take along with the dosage.\r\n            Include prescriptions and non-prescription medications, vitamins,\r\n            inhalers, naturopathic or over the counter medications.\r\n          </h3>\r\n        </Grid>\r\n\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"1.\"\r\n          onChange={props.onInputChange}\r\n          name=\"medication1\"\r\n          value={props.state.medication1}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"2.\"\r\n          onChange={props.onInputChange}\r\n          name=\"medication2\"\r\n          value={props.state.medication2}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"3.\"\r\n          onChange={props.onInputChange}\r\n          name=\"medication3\"\r\n          value={props.state.medication3}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"4.\"\r\n          onChange={props.onInputChange}\r\n          name=\"medication4\"\r\n          value={props.state.medication4}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"5.\"\r\n          onChange={props.onInputChange}\r\n          name=\"medication5\"\r\n          value={props.state.medication5}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"6.\"\r\n          onChange={props.onInputChange}\r\n          name=\"medication6\"\r\n          value={props.state.medication6}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid item xs={12} sm={12} lg={7}>\r\n          <h3>\r\n            Periodically we run specials on Botox and Dermal Filler injections.\r\n            Would you like to be contacted by email regarding these promotions?\r\n          </h3>\r\n        </Grid>\r\n\r\n        <Grid xs={12} sm={12} lg={3}>\r\n          <Grid className=\"yesno\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                name=\"promotions\"\r\n                defaultValue=\"top\"\r\n                value={props.state.promotions}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Yes\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Yes\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"No\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        {props.state.promotions.length < 1 && props.firstSubmit === true ? (\r\n          <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid xs={12} sm={12} lg={7}>\r\n          <h3>\r\n            Would you like to be contacted by our Clinical Skin Care Therarpist\r\n            regarding assistance with your skin care?\r\n          </h3>\r\n        </Grid>\r\n\r\n        <Grid xs={12} sm={12} lg={3}>\r\n          <Grid className=\"yesno\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                name=\"skinCare\"\r\n                defaultValue=\"top\"\r\n                value={props.state.skinCare}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Yes\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Yes\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"No\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        {props.state.skinCare.length < 1 && props.firstSubmit === true ? (\r\n          <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Medications;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\nconst Comments = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h2>COMMENTS:</h2>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Additional comments here..\"\r\n          onChange={props.onInputChange}\r\n          name=\"comments\"\r\n          value={props.state.comments}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:500\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n          multiline\r\n          rows={4}\r\n          rowsMax={10}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useState } from \"react\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\nimport { Button, Grid, Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport State from \"./state.js\";\r\nimport PersonalInfo from \"./components/PersonalInfo\";\r\nimport MedicalHistory from \"./components/MedicalHistory\";\r\nimport MedicalHistory2 from \"./components/MedicalHistory2\";\r\nimport Allergies from \"./components/Allergies\";\r\nimport Medications from \"./components/Medications\";\r\nimport Comments from \"./components/Comments\";\r\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst Registration = (props) => {\r\n  const [firstSubmit, setFirstSubmit] = useState(false);\r\n  const [done, setDone] = useState(false);\r\n  const [state, setState] = useState(State);\r\n  const [result, setResult] = useState(null);\r\n  const [trimmedSignature, setTrimmedSignature] = useState({});\r\n  const classes = useStyles();\r\n\r\n  let sigPad = {};\r\n\r\n  const clear = () => {\r\n    sigPad.clear();\r\n    setTrimmedSignature({});\r\n  };\r\n\r\n  const trim = () => {\r\n    setTrimmedSignature(sigPad.getTrimmedCanvas().toDataURL(\"image/png\"));\r\n  };\r\n\r\n  const firstSubmitCheck = () => {\r\n    setFirstSubmit(true);\r\n  };\r\n\r\n  const sendEmail = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      state.name.length > 2 &&\r\n      state.name.length < 40 &&\r\n      state.dob.length === 10 &&\r\n      state.age.length === 2 &&\r\n      state.healthcard.length > 8 &&\r\n      state.healthcard.length < 12 &&\r\n      state.effectivedate.length === 10 &&\r\n      state.expirydate.length === 10 &&\r\n      state.streetaddress.length > 5 &&\r\n      state.streetaddress.length < 50 &&\r\n      state.city.length > 4 &&\r\n      state.city.length < 50 &&\r\n      state.province.length > 2 &&\r\n      state.province.length < 40 &&\r\n      state.postal.length > 5 &&\r\n      state.postal.length < 9 &&\r\n      state.homephone.length < 16 &&\r\n      state.workphone.length < 16 &&\r\n      state.cellphone.length < 16 &&\r\n      state.email.length > 9 &&\r\n      state.email.length < 40 &&\r\n      state.occupation.length > 5 &&\r\n      state.occupation.length < 40 &&\r\n      state.famphysician.length < 40 &&\r\n      state.contacted.length < 40 &&\r\n      state.hearofus.length < 40 &&\r\n      state.sleepApnea !== \"\" &&\r\n      state.doSmoke !== \"\" &&\r\n      state.pregnancy !== \"\" &&\r\n      state.allergicMed !== \"\" &&\r\n      state.allergicFood !== \"\" &&\r\n      state.allergicLatex !== \"\" &&\r\n      state.allergicIodine !== \"\" &&\r\n      state.hyperthermia !== \"\" &&\r\n      state.anesthetic !== \"\" &&\r\n      state.promotions !== \"\" &&\r\n      state.skinCare !== \"\"\r\n    ) {\r\n      setDone(true);\r\n      axios\r\n        .post(\r\n          \"/registration\",\r\n          {\r\n            ...state,\r\n            trimmedSignature,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          setResult(response.data);\r\n          setState(State);\r\n          setDone(true);\r\n          props.setRegistrationDone(true);\r\n        })\r\n        .catch(() => {\r\n          setResult({\r\n            success: false,\r\n            message: \"Something went wrong. Try again later\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const onInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onCheck = (e) => {\r\n    const { name } = e.target;\r\n    setState((prevState) => ({ ...prevState, [name]: !prevState[name] }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {done ? (\r\n          <Grid lg={12} xs={12} sm={12} md={12}>\r\n            <div className=\"thankyou\">\r\n              <p className=\"thanks\">Thank you for your submission.</p>\r\n              <p className=\"donemessage\">\r\n                If you are finished filling out all required forms, please visit\r\n                our <a href=\"https://www.landingsurgery.ca/\">homepage</a> to\r\n                learn more.\r\n              </p>\r\n            </div>\r\n          </Grid>\r\n        ) : (\r\n          <div className={classes.root}>\r\n            {/* <form onSubmit={sendEmail}> */}\r\n            <ValidatorForm onSubmit={sendEmail}>\r\n              <Grid container spacing={6}>\r\n                <Grid item xs={12}>\r\n                  {result && (\r\n                    <p className={`${result.success ? \"success\" : \"error\"}`}>\r\n                      {result.message}\r\n                    </p>\r\n                  )}\r\n                  <h1 className=\"registration\">Pre-Screening Data</h1>\r\n                </Grid>\r\n                <PersonalInfo onInputChange={onInputChange} state={state} />\r\n\r\n                <MedicalHistory\r\n                  onCheck={onCheck}\r\n                  onInputChange={onInputChange}\r\n                  state={state}\r\n                  firstSubmit={firstSubmit}\r\n                />\r\n\r\n                <MedicalHistory2\r\n                  onInputChange={onInputChange}\r\n                  state={state}\r\n                  firstSubmit={firstSubmit}\r\n                />\r\n\r\n                <Allergies\r\n                  onInputChange={onInputChange}\r\n                  state={state}\r\n                  firstSubmit={firstSubmit}\r\n                />\r\n                <Medications\r\n                  onInputChange={onInputChange}\r\n                  state={state}\r\n                  firstSubmit={firstSubmit}\r\n                />\r\n                <Comments onInputChange={onInputChange} state={state} />\r\n\r\n                <Grid item xs={12}>\r\n                  <hr />\r\n                  <h3>\r\n                    Add your signature in the box below (as big as possible).\r\n                    Please use your mouse, or finger if you have a touch screen.\r\n                  </h3>\r\n                </Grid>\r\n                <Grid item lg={12} xs={12}>\r\n                  {firstSubmit === true && done === false ? (\r\n                    <h3 className=\"mainError\">\r\n                      Please scroll up to complete required fields.\r\n                    </h3>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <SignatureCanvas\r\n                    penColor=\"black\"\r\n                    canvasProps={{\r\n                      className: \"sigCanvas\",\r\n                    }}\r\n                    ref={(ref) => {\r\n                      sigPad = ref;\r\n                    }}\r\n                  />\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        padding: \"20px 30px\",\r\n                        marginTop: 50,\r\n                        marginBottom: 30,\r\n                        border: \"1px solid black\",\r\n                      }}\r\n                      onClick={clear}\r\n                    >\r\n                      Clear Signature\r\n                    </Button>\r\n                  </Grid>\r\n\r\n                  {/* {trimmedSignature ? <img src={trimmedSignature} /> : null} */}\r\n                </Grid>\r\n                <Grid item lg={12} xs={12}>\r\n                  {firstSubmit === true && done === false ? (\r\n                    <h3 className=\"mainError\">\r\n                      Please scroll up to complete required fields.\r\n                    </h3>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#6C0D0D\",\r\n                      padding: \"14px 14px\",\r\n                      marginBottom: \"100px\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        fontSize: \"20px\",\r\n                        color: \"white\",\r\n                        fontWeight: 600,\r\n                        border: \".5px solid hsla(0,0%,100%,.5)\",\r\n                        padding: \"14px 40px\",\r\n                        backgroundColor: \"#6C0D0D\",\r\n                      }}\r\n                      variant=\"primary\"\r\n                      type=\"submit\"\r\n                      onClick={() => {\r\n                        firstSubmitCheck();\r\n                        trim();\r\n                      }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n              {/* </form> */}\r\n            </ValidatorForm>\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","import NewDate from \"../../utils/NewDate\";\r\nexport default {\r\n  date: NewDate(),\r\n  name: \"\",\r\n  dob: \"\",\r\n  cough: false,\r\n  fever: false,\r\n  throat: false,\r\n  headache: false,\r\n  nose: false,\r\n  sneeze: false,\r\n  smellTaste: false,\r\n  breath: false,\r\n  aches: false,\r\n  fatigue: false,\r\n  lesions: false,\r\n  diarrhea: false,\r\n  day14Travel: \"\",\r\n  closeContact: \"\",\r\n  clusterHub: \"\",\r\n  covidRisk: \"\",\r\n  tested: \"\",\r\n  dateOfSwab: \"\",\r\n  other: \"\",\r\n  verifiedBy: \"\",\r\n  updateBy: \"\",\r\n};\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\nimport NewDate from \"../../../utils/NewDate\";\r\nconst Risk = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          disabled\r\n          fullWidth\r\n          label=\"Date\"\r\n          onChange={props.onInputChange}\r\n          placeholder={NewDate()}\r\n          name=\"date\"\r\n          value={NewDate()}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Date is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Patient Full Name\"\r\n          onChange={props.onInputChange}\r\n          name=\"name\"\r\n          value={props.state.name}\r\n          validators={[\"minStringLength:4\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Date is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Date of Birth (YYYY/MM/DD)\"\r\n          onChange={props.onInputChange}\r\n          name=\"dob\"\r\n          placeholder=\"YYYY/MM/DD\"\r\n          value={props.state.dob}\r\n          validators={[\"minStringLength:10\", \"maxStringLength:10\"]}\r\n          errorMessages={[\r\n            \"This field is required\",\r\n            \"Date of birth is not valid\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Risk;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Paragraph = () => {\r\n  return (\r\n    <Grid item xs={12} sm={12}>\r\n      <p>\r\n        The following risk assessment must be completed for every patient who\r\n        recieves face to face services or is admitted.\r\n      </p>\r\n      {/* <p>\r\n        The COVID-19 Risk Assessment should be placed in front of the patient's\r\n        chart when completed or placed in a location and communicated to team\r\n        members who are caring for the patient. The Risk Assessment is used to\r\n        facilitate patient, staff and physician safety.\r\n      </p> */}\r\n      {/* <h3>\r\n        It is the responsibility of the Most Responsible Provider to ensure that\r\n        the assessment is completed and signed at the time of healthcare\r\n        interaction or admission\r\n      </h3> */}\r\n      <h2 style={{ marginBotto: 0 }}>\r\n        PATIENT RISK COVID-19 IDENTIFICATION:\r\n        {/* (Completed by any healthcare\r\n        worker) */}\r\n      </h2>\r\n      {/* <h3 style={{ marginBottom: 0 }}>\r\n        If the patient meets any of the boxes below, have the patients\r\n        wash/sanitize their hands and put on a surgical mask.\r\n      </h3> */}\r\n    </Grid>\r\n  );\r\n};\r\nexport default Paragraph;\r\n","import React from \"react\";\r\nimport { Grid, Checkbox, FormControlLabel } from \"@material-ui/core\";\r\n\r\nconst Section1 = (props) => {\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Grid container>\r\n        <p\r\n          style={{\r\n            marginTop: 0,\r\n            marginBottom: 20,\r\n            fontStyle: \"italic\",\r\n            fontSize: 22,\r\n          }}\r\n        >\r\n          Do you currently have two of the following symptoms:\r\n        </p>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.cough}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.cough}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"cough\"\r\n              />\r\n            }\r\n            label=\"New or worsening cough\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.fever}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.fever}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"fever\"\r\n              />\r\n            }\r\n            label=\"Fever greater than 38 C (i.e. chills, sweats)\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.throat}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.throat}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"throat\"\r\n              />\r\n            }\r\n            label=\"Sore or hoarse throat\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.headache}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.headache}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"headache\"\r\n              />\r\n            }\r\n            label=\"Headache\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.nose}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.nose}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"nose\"\r\n              />\r\n            }\r\n            label=\"Nasal congestion/runny nose\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.sneeze}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.sneeze}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"sneeze\"\r\n              />\r\n            }\r\n            label=\"Sneezing\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.smellTaste}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.smellTaste}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"smellTaste\"\r\n              />\r\n            }\r\n            label=\"Loss of sense of smell or taste\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.breath}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.breath}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"breath\"\r\n              />\r\n            }\r\n            label=\"New or worsening shortness of breath\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.aches}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.aches}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"aches\"\r\n              />\r\n            }\r\n            label=\"Muscle aches\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.fatique}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.fatique}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"fatique\"\r\n              />\r\n            }\r\n            label=\"Unusual fatigue\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.lesions}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.lesions}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"lesions\"\r\n              />\r\n            }\r\n            label=\"Red, purple, bluish lesions on the feet, toes or fingers without clear cause\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.diarrhea}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.diarrhea}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"diarrhea\"\r\n              />\r\n            }\r\n            label=\"Diarrhea\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Section1;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\n\r\nconst Section2 = (props) => {\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <p style={{ marginTop: 40, fontStyle: \"italic\", fontSize: 22 }}>\r\n            Have you travelled outside of Maritime Canada in the last 14 days\r\n            (outside of NB, NS, PEI):\r\n          </p>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"day14Travel\"\r\n              value={props.state.day14Travel}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.day14Travel < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <p style={{ marginTop: 60, fontStyle: \"italic\", fontSize: 22 }}>\r\n            Have you had close contact with Covid-19:\r\n          </p>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"closeContact\"\r\n              value={props.state.closeContact}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Known case\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Known case\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"Suspected cases\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Suspected case\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"No known cases\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No known COVID-19 contacts\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.closeContact < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select above.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <p style={{ marginTop: 60, fontStyle: \"italic\", fontSize: 22 }}>\r\n            Do you live within a known cluster as identified on the COVID-19\r\n            Hub:\r\n          </p>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"clusterHub\"\r\n              value={props.state.clusterHub}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Community Cluster\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Community cluster\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Facility Cluster\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Facility cluster\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"Does not live in a cluster\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Does not live in a cluster\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.clusterHub < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select above.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Section2;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst Section2 = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Grid container>\r\n        {/* <Grid item xs={12}>\r\n          <h3>\r\n            Most Responsible Provider must verify the above (or complete if not\r\n            one by another team member) and complete the boxes below.\r\n          </h3>\r\n          <h3>PATIENT RISK COVID-19 ASSESSMENT:</h3>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"covidRisk\"\r\n              value={props.state.covidRisk}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"IDENTIFIED COVID-19 RISK\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"NO IDENTIFIED COVID-19 RISK\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.covidRisk < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select above.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid> */}\r\n        <Grid item xs={12}>\r\n          <h3 style={{ marginTop: 70 }}>COVID-19 SWAB HISTORY:</h3>\r\n          <p style={{ fontStyle: \"italic\", fontSize: 22 }}>\r\n            Have you been tested for COVID-19:\r\n          </p>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"tested\"\r\n              value={props.state.tested}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.tested < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select above.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12} sm={12} lg={4}>\r\n            <TextValidator\r\n              fullWidth\r\n              label=\"Date of Swab\"\r\n              onChange={props.onInputChange}\r\n              name=\"dateOfSwab\"\r\n              value={props.state.dateOfSwab}\r\n              inputProps={{ style: { fontSize: fontSize } }}\r\n              InputLabelProps={{ style: { fontSize: fontSize } }}\r\n            />\r\n          </Grid>\r\n          {/* <Grid item xs={12} sm={12} lg={4}>\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                defaultValue=\"top\"\r\n                name=\"other\"\r\n                value={props.state.other}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"POS\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"POS\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"NEG\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"NEG\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Pending\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Pending\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid> */}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Section2;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Container, Button } from \"@material-ui/core\";\r\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport axios from \"axios\";\r\nimport State from \"./state.js\";\r\nimport Risk from \"./components/Risk\";\r\nimport Paragraph from \"./components/Paragrapgh\";\r\nimport Section1 from \"./components/Section1\";\r\nimport Section2 from \"./components/Section2\";\r\nimport Section3 from \"./components/Section3\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./styles.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst Covid = (props) => {\r\n  const [state, setState] = useState(State);\r\n  const [done, setDone] = useState(false);\r\n  const [firstSubmit, setFirstSubmit] = useState(false);\r\n  const classes = useStyles();\r\n  const [trimmedSignature, setTrimmedSignature] = useState({});\r\n  const [result, setResult] = useState(null);\r\n\r\n  let sigPad = {};\r\n\r\n  const clear = () => {\r\n    sigPad.clear();\r\n    setTrimmedSignature({});\r\n  };\r\n\r\n  const trim = () => {\r\n    setTrimmedSignature(sigPad.getTrimmedCanvas().toDataURL(\"image/png\"));\r\n  };\r\n\r\n  const onInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n    console.log(\"name: \", name, \"value: \", value);\r\n  };\r\n\r\n  const onCheck = (e) => {\r\n    const { name } = e.target;\r\n    setState((prevState) => ({ ...prevState, [name]: !prevState[name] }));\r\n  };\r\n\r\n  const firstSubmitCheck = (e) => {\r\n    setFirstSubmit(true);\r\n  };\r\n\r\n  const sendEmail = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      state.name.length > 2 &&\r\n      state.name.length < 40 &&\r\n      state.dob.length === 10 &&\r\n      state.day14Travel !== \"\" &&\r\n      state.closeContact !== \"\" &&\r\n      state.custerHub !== \"\" &&\r\n      state.tested !== \"\"\r\n    ) {\r\n      setDone(true);\r\n      axios\r\n        .post(\"/covid\", { ...state, trimmedSignature })\r\n        .then((response) => {\r\n          setResult(response.data);\r\n          setState(State);\r\n          setDone(true);\r\n          props.setCovidDone(true);\r\n        })\r\n        .catch(() => {\r\n          setResult({\r\n            success: false,\r\n            message: \"Something went wrong. Try again later\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {done ? (\r\n        <Grid lg={12} xs={12} sm={12} md={12}>\r\n          <div className=\"thankyou\">\r\n            <p className=\"thanks\">Thank you for your submission.</p>\r\n            <p className=\"donemessage\">\r\n              If you are finished filling out all required forms, please visit\r\n              our <a href=\"https://www.landingsurgery.ca/\">homepage</a> to learn\r\n              more.\r\n            </p>\r\n          </div>\r\n        </Grid>\r\n      ) : (\r\n        <div className={classes.root}>\r\n          <Grid item xs={12}>\r\n            <h1 className=\"registration title\">COVID-19 Risk Assessment</h1>\r\n          </Grid>\r\n          <ValidatorForm onSubmit={sendEmail}>\r\n            <Grid container spacing={6}>\r\n              <Grid item xs={12}>\r\n                {result && (\r\n                  <p className={`${result.success ? \"success\" : \"error\"}`}>\r\n                    {result.message}\r\n                  </p>\r\n                )}\r\n              </Grid>\r\n              <Risk onInputChange={onInputChange} state={state} />\r\n              <Paragraph />\r\n              <Section1\r\n                onInputChange={onInputChange}\r\n                onCheck={onCheck}\r\n                state={state}\r\n              />\r\n              <Section2\r\n                onInputChange={onInputChange}\r\n                state={state}\r\n                firstSubmit={firstSubmit}\r\n              />\r\n              <Section3\r\n                onInputChange={onInputChange}\r\n                state={state}\r\n                firstSubmit={firstSubmit}\r\n              />\r\n\r\n              <Grid item xs={12}>\r\n                <h3>\r\n                  Add your signature in the box below (as big as possible).\r\n                  Please use your mouse, or finger if you have a touch screen.\r\n                </h3>\r\n              </Grid>\r\n              <Grid item lg={12} xs={12}>\r\n                {firstSubmit === true && done === false ? (\r\n                  <h3 className=\"mainError\">\r\n                    Please scroll up to complete required fields.\r\n                  </h3>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <SignatureCanvas\r\n                  penColor=\"black\"\r\n                  canvasProps={{\r\n                    className: \"sigCanvas\",\r\n                  }}\r\n                  ref={(ref) => {\r\n                    sigPad = ref;\r\n                  }}\r\n                />\r\n\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      padding: \"20px 30px\",\r\n                      marginTop: 50,\r\n                      marginBottom: 30,\r\n                      border: \"1px solid black\",\r\n                    }}\r\n                    onClick={clear}\r\n                  >\r\n                    Clear Signature\r\n                  </Button>\r\n                </Grid>\r\n\r\n                {/* {trimmedSignature ? <img src={trimmedSignature} /> : null} */}\r\n              </Grid>\r\n              <Grid item lg={12} xs={12}>\r\n                {firstSubmit === true && done === false ? (\r\n                  <h3 className=\"mainError\">\r\n                    Please scroll up to complete required fields.\r\n                  </h3>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#6C0D0D\",\r\n                    padding: \"14px 14px\",\r\n                    marginBottom: \"100px\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      fontSize: \"20px\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      border: \".5px solid hsla(0,0%,100%,.5)\",\r\n                      padding: \"14px 40px\",\r\n                      backgroundColor: \"#6C0D0D\",\r\n                    }}\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    onClick={() => {\r\n                      firstSubmitCheck();\r\n                      trim();\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </ValidatorForm>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Covid;\r\n","import NewDate from \"../../utils/NewDate\";\r\n\r\nexport default {\r\n  date: NewDate(),\r\n  name: \"\",\r\n  dob: \"\",\r\n  streetaddress: \"\",\r\n  city: \"\",\r\n  province: \"\",\r\n  postal: \"\",\r\n  cellphone: \"\",\r\n  allergies: \"\",\r\n  currentMeds: \"\",\r\n  prevSurg1: \"\",\r\n  prevSurg2: \"\",\r\n  prevSurg3: \"\",\r\n  prevSurg4: \"\",\r\n  skinCancer: \"\",\r\n  cancerWhen: \"\",\r\n  cancerType1: false,\r\n  cancerType2: false,\r\n  cancerType3: false,\r\n  tmj: \"\",\r\n  constipation: \"\",\r\n  crohns: \"\",\r\n  heartDisease: \"\",\r\n  contactLenses: \"\",\r\n  hearingAids: \"\",\r\n  anxiety: \"\",\r\n  ocd: \"\",\r\n  cancer: \"\",\r\n  diabetes: \"\",\r\n  epilepsy: \"\",\r\n  hep: \"\",\r\n  hiv: \"\",\r\n  lupus: \"\",\r\n  thyroid: \"\",\r\n  herpes: \"\",\r\n  birthControl: \"\",\r\n  birthLong: \"\",\r\n  menopause: \"\",\r\n  preg: \"\",\r\n  breastfeeding: \"\",\r\n  ovaries: \"\",\r\n  hormone: \"\",\r\n  hyster: \"\",\r\n  hysterWhen: \"\",\r\n  derma: \"\",\r\n  dermaReason: \"\",\r\n  accutane: false,\r\n  anitbiotics: false,\r\n  retin: false,\r\n  retinStrength: \"\",\r\n  hydro: false,\r\n  hydroStrength: \"\",\r\n  medLength: \"\",\r\n  botox: false,\r\n  resty: false,\r\n  artecoll: false,\r\n  laserSurface: false,\r\n  laserRemove: false,\r\n  thermage: false,\r\n  ipl: false,\r\n  injectAreas: \"\",\r\n  injectHappy: \"\",\r\n  facials: false,\r\n  microderm: false,\r\n  chempeel: false,\r\n  lacticPeel: false,\r\n  salicPeel: false,\r\n  lastTreat: \"\",\r\n  peelHapppy: \"\",\r\n  occupation: \"\",\r\n  fullpart: \"\",\r\n  children: \"\",\r\n  stress: \"\",\r\n  stressWell: \"\",\r\n  sleepHours: \"\",\r\n  diet: \"\",\r\n  vitamins: \"\",\r\n  coffee: \"\",\r\n  water: \"\",\r\n  alcohol: \"\",\r\n  cigs: \"\",\r\n  cardio: false,\r\n  weights: false,\r\n  stretch: false,\r\n  exerciseOften: \"\",\r\n  acne: false,\r\n  blackheads: false,\r\n  eczema: false,\r\n  whiteheads: false,\r\n  senskin: false,\r\n  pigment: false,\r\n  rosacea: false,\r\n  congskin: false,\r\n  elastic: false,\r\n  psoriasis: false,\r\n  sundamage: false,\r\n  uneventext: false,\r\n  scars: false,\r\n  darkCircles: false,\r\n  pores: false,\r\n  ros: false,\r\n  vitiligo: false,\r\n  aging: false,\r\n  dermatitis: false,\r\n  freckles: false,\r\n  scarsNoAcne: false,\r\n  backne: false,\r\n  dryskin: false,\r\n  wrinkles: false,\r\n  sebhorrea: false,\r\n  puffy: false,\r\n  capilaries: false,\r\n  concern1: \"\",\r\n  concern2: \"\",\r\n  concern3: \"\",\r\n  sunReact: \"\",\r\n  darkSkin: \"\",\r\n  sunblister: \"\",\r\n  blisterArea: \"\",\r\n  tanhow: \"\",\r\n  tanoften: \"\",\r\n  skincolor: \"\",\r\n  ethnic: \"\",\r\n  eyecolor: \"\",\r\n  haircolor: \"\",\r\n  promotions: \"\",\r\n  skinCare: \"\",\r\n};\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\nimport NewDate from \"../../../utils/NewDate\";\r\nconst PersonalInfo = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h1 style={{ marginBottom: 0 }}>Personal Info</h1>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          disabled\r\n          fullWidth\r\n          label=\"Date\"\r\n          onChange={props.onInputChange}\r\n          placeholder={NewDate()}\r\n          name=\"date\"\r\n          value={NewDate()}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Date is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Name\"\r\n          onChange={props.onInputChange}\r\n          name=\"name\"\r\n          value={props.state.name}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:25\"]}\r\n          errorMessages={[\"This field is required\", \"Name is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Date of Birth (YYYY/MM/DD)\"\r\n          onChange={props.onInputChange}\r\n          name=\"dob\"\r\n          placeholder=\"YYYY/MM/DD\"\r\n          value={props.state.dob}\r\n          validators={[\"minStringLength:10\", \"maxStringLength:10\"]}\r\n          errorMessages={[\r\n            \"This field is required\",\r\n            \"Date of birth is not valid\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Street Address\"\r\n          onChange={props.onInputChange}\r\n          name=\"streetaddress\"\r\n          value={props.state.streetaddress}\r\n          validators={[\"minStringLength:5\", \"maxStringLength:30\"]}\r\n          errorMessages={[\"Enter your address\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"City\"\r\n          onChange={props.onInputChange}\r\n          name=\"city\"\r\n          value={props.state.city}\r\n          validators={[\"minStringLength:4\", \"maxStringLength:30\"]}\r\n          errorMessages={[\"Enter your city\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Province\"\r\n          onChange={props.onInputChange}\r\n          name=\"province\"\r\n          value={props.state.province}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:30\"]}\r\n          errorMessages={[\"Enter your province\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Postal Code\"\r\n          onChange={props.onInputChange}\r\n          name=\"postal\"\r\n          value={props.state.postal}\r\n          validators={[\"minStringLength:5\", \"maxStringLength:9\"]}\r\n          errorMessages={[\"Enter your postal code\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Phone\"\r\n          onChange={props.onInputChange}\r\n          name=\"cellphone\"\r\n          value={props.state.cellphone}\r\n          validators={[\"minStringLength:9\", \"maxStringLength:16\"]}\r\n          errorMessages={[\"Enter a valid phone number\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonalInfo;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\n\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst MedicalHistory = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h2 style={{ marginBottom: 0 }}>MEDICAL HISTORY:</h2>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Allergies (systemic or topical)\"\r\n          onChange={props.onInputChange}\r\n          name=\"allergies\"\r\n          value={props.state.allergies}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:50\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Current Medications\"\r\n          onChange={props.onInputChange}\r\n          name=\"currentMeds\"\r\n          value={props.state.currentMeds}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:50\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n        <h3>Previous surgeries (include dates)</h3>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"1.\"\r\n          onChange={props.onInputChange}\r\n          name=\"prevSurg1\"\r\n          value={props.state.prevSurg1}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:60\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"2.\"\r\n          onChange={props.onInputChange}\r\n          name=\"prevSurg2\"\r\n          value={props.state.prevSurg2}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:60\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"3.\"\r\n          onChange={props.onInputChange}\r\n          name=\"prevSurg3\"\r\n          value={props.state.prevSurg3}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:60\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"4.\"\r\n          onChange={props.onInputChange}\r\n          name=\"prevSurg4\"\r\n          value={props.state.prevSurg4}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:60\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>Do you have/had any skin cancer?</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"skinCancer\"\r\n              value={props.state.skinCancer}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.skinCancer.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"If yes, when?\"\r\n          onChange={props.onInputChange}\r\n          name=\"cancerWhen\"\r\n          value={props.state.cancerWhen}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:25\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={3} lg={3}>\r\n        <h3>What type?</h3>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={3} lg={3}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value=\"Basal Cell\"\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.cancerType1}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"cancerType1\"\r\n                />\r\n              }\r\n              label=\"Basal Cell\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={3} lg={3}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value=\"Squamous Cell\"\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.cancerType2}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"cancerType2\"\r\n                />\r\n              }\r\n              label=\"Squamous Cell\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={3} lg={3}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value=\"Melanoma\"\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.cancerType3}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"cancerType3\"\r\n                />\r\n              }\r\n              label=\"Melanoma\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12}>\r\n        <h3>Do you have any of the following?</h3>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={4} lg={4}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.tmj}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.tmj}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"tmj\"\r\n                />\r\n              }\r\n              label=\"TMJ\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.constipation}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.constipation}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"constipation\"\r\n                />\r\n              }\r\n              label=\"Chronic Constipation\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.crohns}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.crohns}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"crohns\"\r\n                />\r\n              }\r\n              label=\"Crohn's/IBS\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.heartDisease}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.heartDisease}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"heartDisease\"\r\n                />\r\n              }\r\n              label=\"Heart Disease\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.contactLenses}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.contactLenses}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"contactLenses\"\r\n                />\r\n              }\r\n              label=\"Contact Lenses\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.hearingAids}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.hearingAids}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"hearingAids\"\r\n                />\r\n              }\r\n              label=\"Hearing Aids\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={4} lg={4}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.anxiety}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.anxiety}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"anxiety\"\r\n                />\r\n              }\r\n              label=\"Anxiety/Depression\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.ocd}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.ocd}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"ocd\"\r\n                />\r\n              }\r\n              label=\"OCD\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.cancer}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.cancer}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"cancer\"\r\n                />\r\n              }\r\n              label=\"Cancer\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.diabetes}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.diabetes}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"diabetes\"\r\n                />\r\n              }\r\n              label=\"Diabetes\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.epilepsy}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.epilepsy}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"epilepsy\"\r\n                />\r\n              }\r\n              label=\"Epilepsy\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={4} lg={4}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.hep}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.hep}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"hep\"\r\n                />\r\n              }\r\n              label=\"Hepatitis B/C\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.hiv}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.hiv}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"hiv\"\r\n                />\r\n              }\r\n              label=\"HIV\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.lupus}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.lupus}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"lupus\"\r\n                />\r\n              }\r\n              label=\"Lupus\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.thyroid}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.thyroid}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"thyroid\"\r\n                />\r\n              }\r\n              label=\"Thyroid Disorder\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.herpes}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.herpes}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"herpes\"\r\n                />\r\n              }\r\n              label=\"Herpes Simplex (Cold Sores)\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n        <h2 style={{ marginBottom: 0 }}>WOMEN:</h2>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Birth Control (type)\"\r\n          onChange={props.onInputChange}\r\n          name=\"birthControl\"\r\n          value={props.state.birthControl}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:30\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"For how long?\"\r\n          onChange={props.onInputChange}\r\n          name=\"birthLong\"\r\n          value={props.state.birthLong}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:30\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.menopause}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.menopause}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"menopause\"\r\n                />\r\n              }\r\n              label=\"Menopause\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.preg}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.preg}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"preg\"\r\n                />\r\n              }\r\n              label=\"Pregnant\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.breastfeeding}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.breastfeeding}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"breastfeeding\"\r\n                />\r\n              }\r\n              label=\"Breastfeeding\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.ovaries}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.ovaries}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"ovaries\"\r\n                />\r\n              }\r\n              label=\"Polycystic Ovaries\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.hormone}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.hormone}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"hormone\"\r\n                />\r\n              }\r\n              label=\"Hormone Replacement Therapy\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n        <FormControlLabel\r\n          value={props.state.hyster}\r\n          control={\r\n            <Checkbox\r\n              checked={props.state.hyster}\r\n              color=\"primary\"\r\n              onChange={props.onCheck}\r\n              name=\"hyster\"\r\n            />\r\n          }\r\n          label=\"Hysterectomy\"\r\n          labelPlacement=\"end\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"When was your hysterectomy?\"\r\n          onChange={props.onInputChange}\r\n          name=\"hysterWhen\"\r\n          value={props.state.hysterWhen}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:25\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12}>\r\n        <h2 style={{ marginBottom: 0 }}>COSMETIC MEDICAL HISTORY:</h2>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Dermatologist\"\r\n          onChange={props.onInputChange}\r\n          name=\"derma\"\r\n          value={props.state.derma}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:30\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Reason for treatment?\"\r\n          onChange={props.onInputChange}\r\n          name=\"dermaReason\"\r\n          value={props.state.dermaReason}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:30\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12}>\r\n        <h3>Do you or have you used the following?</h3>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.accutane}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.accutane}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"accutane\"\r\n                  />\r\n                }\r\n                label=\"Accutane\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.anitbiotics}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.anitbiotics}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"anitbiotics\"\r\n                  />\r\n                }\r\n                label=\"Oral Antibiotics\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.retin}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.retin}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"retin\"\r\n                  />\r\n                }\r\n                label=\"Retin-A\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Strength %\"\r\n                onChange={props.onInputChange}\r\n                name=\"retinStrength\"\r\n                value={props.state.retinStrength}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.hydro}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.hydro}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"hydro\"\r\n                  />\r\n                }\r\n                label=\"Hydrocortisone\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Strength %\"\r\n                onChange={props.onInputChange}\r\n                name=\"hydroStrength\"\r\n                value={props.state.hydroStrength}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item lg={12} sm={12} xs={12}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"How long have you used these medications?\"\r\n          onChange={props.onInputChange}\r\n          name=\"medLength\"\r\n          value={props.state.medLength}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12}>\r\n        <h3>Injections:</h3>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.botox}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.botox}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"botox\"\r\n                />\r\n              }\r\n              label=\"Botox\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.resty}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.resty}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"resty\"\r\n                />\r\n              }\r\n              label=\"Restylane/Perlane\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.artecoll}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.artecoll}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"artecoll\"\r\n                />\r\n              }\r\n              label=\"Artecoll\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.laserSurface}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.laserSurface}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"laserSurface\"\r\n                />\r\n              }\r\n              label=\"Laser Resurfacing\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.laserRemove}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.laserRemove}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"laserRemove\"\r\n                />\r\n              }\r\n              label=\"Laser/IPL Hair Removal\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.thermage}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.thermage}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"thermage\"\r\n                />\r\n              }\r\n              label=\"Thermage\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.ipl}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.ipl}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"ipl\"\r\n                />\r\n              }\r\n              label=\"IPL/Sclerotherapy (for veins)\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"What area?\"\r\n          onChange={props.onInputChange}\r\n          name=\"injectAreas\"\r\n          value={props.state.injectAreas}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:30\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Where you happy with results?\"\r\n          onChange={props.onInputChange}\r\n          name=\"injectHappy\"\r\n          value={props.state.injectHappy}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:30\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.facials}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.facials}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"facials\"\r\n                />\r\n              }\r\n              label=\"Facials\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.microderm}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.microderm}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"microderm\"\r\n                />\r\n              }\r\n              label=\"Microdermabraison\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.chempeel}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.chempeel}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"chempeel\"\r\n                />\r\n              }\r\n              label=\"Chemical Peels\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.lacticPeel}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.lacticPeel}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"lacticPeel\"\r\n                />\r\n              }\r\n              label=\"Glycolic/Lactic Acid Peels\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.salicPeel}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.salicPeel}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"salicPeel\"\r\n                />\r\n              }\r\n              label=\"Salicylic Acid Peels\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Last Treatment?\"\r\n          onChange={props.onInputChange}\r\n          name=\"lastTreat\"\r\n          value={props.state.lastTreat}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:30\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Where you happy with results?\"\r\n          onChange={props.onInputChange}\r\n          name=\"peelHapppy\"\r\n          value={props.state.peelHapppy}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:30\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistory;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\n\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst Lifestyle = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h2 style={{ marginBottom: 0 }}>LIFESTYLE:</h2>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid container>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Occupation\"\r\n                onChange={props.onInputChange}\r\n                name=\"occupation\"\r\n                value={props.state.occupation}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                  row\r\n                  aria-label=\"position\"\r\n                  defaultValue=\"top\"\r\n                  name=\"fullpart\"\r\n                  value={props.state.fullpart}\r\n                  onChange={props.onInputChange}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"Full Time\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"F/T\"\r\n                  />\r\n\r\n                  <FormControlLabel\r\n                    value=\"Part Time\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"P/T\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n              {props.state.fullpart.length < 1 && props.firstSubmit === true ? (\r\n                <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Children? (ages)\"\r\n          onChange={props.onInputChange}\r\n          name=\"children\"\r\n          value={props.state.children}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>Stress level</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"stress\"\r\n              value={props.state.stress}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"High\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"High\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"Moderate\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Moderate\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Low\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Low\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.stress.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>Do you handle stress well?</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"stressWell\"\r\n              value={props.state.stressWell}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.stressWell.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>Sleep pattern</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"sleepHours\"\r\n              value={props.state.sleepHours}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"8+ hrs\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"8+ hrs\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"4-6 hrs\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"4-6 hrs\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Less than 4 hrs\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Less than 4 hrs\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.sleepHours.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>Diet</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"diet\"\r\n              value={props.state.diet}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Healthy\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Healthy\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"Average\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Average\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Poor\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Poor\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Vegetarian/Vegan\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Vegetarian/Vegan\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Restricted/Diabetic\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Restricted/Diabetic\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.diet.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Dietary supplements/vitamins:\"\r\n          onChange={props.onInputChange}\r\n          name=\"vitamins\"\r\n          value={props.state.vitamins}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"# Coffee/day:\"\r\n          onChange={props.onInputChange}\r\n          name=\"coffee\"\r\n          value={props.state.coffee}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"# Water/day:\"\r\n          onChange={props.onInputChange}\r\n          name=\"water\"\r\n          value={props.state.water}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"# Alcohol/day:\"\r\n          onChange={props.onInputChange}\r\n          name=\"alcohol\"\r\n          value={props.state.alcohol}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"# Cigarettes/day:\"\r\n          onChange={props.onInputChange}\r\n          name=\"cigs\"\r\n          value={props.state.cigs}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}></Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <h3>Exercise:</h3>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n              <FormControlLabel\r\n                value={props.state.cardio}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.cardio}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"cardio\"\r\n                  />\r\n                }\r\n                label=\"Cardio\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n              <FormControlLabel\r\n                value={props.state.weights}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.weights}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"weights\"\r\n                  />\r\n                }\r\n                label=\"Weights\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n              <FormControlLabel\r\n                value={props.state.stretch}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.stretch}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"stretch\"\r\n                  />\r\n                }\r\n                label=\"Stretching\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <h3>Exercise how often?</h3>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup\r\n            row\r\n            aria-label=\"position\"\r\n            defaultValue=\"top\"\r\n            name=\"exerciseOften\"\r\n            value={props.state.exerciseOften}\r\n            onChange={props.onInputChange}\r\n          >\r\n            <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n              <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                <FormControlLabel\r\n                  value=\"< 2 x week\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"< 2 x week\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                <FormControlLabel\r\n                  value=\"2-3 X week\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"2-3 X week\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                <FormControlLabel\r\n                  value=\"< 3 x week\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"< 3 x week\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lifestyle;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst Skin = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12}>\r\n        <h2>SKIN CONDITIONS</h2>\r\n        <h3 style={{ marginBottom: 0 }}>\r\n          Please indicate any and all skin conditions/concerns:\r\n        </h3>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={4} lg={4}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.acne}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.acne}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"acne\"\r\n                />\r\n              }\r\n              label=\"Acne\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.blackheads}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.blackheads}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"blackheads\"\r\n                />\r\n              }\r\n              label=\"Blackheads\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.eczema}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.eczema}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"eczema\"\r\n                />\r\n              }\r\n              label=\"Eczema\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.whiteheads}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.whiteheads}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"whiteheads\"\r\n                />\r\n              }\r\n              label=\"Milia (whiteheads)\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.senskin}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.senskin}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"senskin\"\r\n                />\r\n              }\r\n              label=\"Sensitive Skin\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.pigment}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.pigment}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"pigment\"\r\n                />\r\n              }\r\n              label=\"Uneven Pigment\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.rosacea}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.rosacea}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"rosacea\"\r\n                />\r\n              }\r\n              label=\"Acne Rosacea\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.congskin}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.congskin}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"congskin\"\r\n                />\r\n              }\r\n              label=\"Congested Skin\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.elastic}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.elastic}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"elastic\"\r\n                />\r\n              }\r\n              label=\"Elasticity Loss\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={4} lg={4}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.psoriasis}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.psoriasis}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"psoriasis\"\r\n                />\r\n              }\r\n              label=\"Psoriasis\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.sundamage}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.sundamage}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"sundamage\"\r\n                />\r\n              }\r\n              label=\"Sun Damage\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.uneventext}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.uneventext}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"uneventext\"\r\n                />\r\n              }\r\n              label=\"Uneven Texture\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.scars}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.scars}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"scars\"\r\n                />\r\n              }\r\n              label=\"Acne Scars\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.darkCircles}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.darkCircles}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"darkCircles\"\r\n                />\r\n              }\r\n              label=\"Dark Circles\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.pores}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.pores}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"pores\"\r\n                />\r\n              }\r\n              label=\"Enlarged Pores\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.ros}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.ros}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"ros\"\r\n                />\r\n              }\r\n              label=\"Rosacea\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.vitiligo}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.vitiligo}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"vitiligo\"\r\n                />\r\n              }\r\n              label=\"Vitiligo\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.aging}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.aging}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"aging\"\r\n                />\r\n              }\r\n              label=\"Aging Skin\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={4} lg={4}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.dermatitis}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.dermatitis}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"dermatitis\"\r\n                />\r\n              }\r\n              label=\"Dermatitis\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.freckles}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.freckles}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"freckles\"\r\n                />\r\n              }\r\n              label=\"Freckles/Moles\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.scarsNoAcne}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.scarsNoAcne}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"scarsNoAcne\"\r\n                />\r\n              }\r\n              label=\"Scars (Non-acneic)\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.backne}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.backne}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"backne\"\r\n                />\r\n              }\r\n              label=\"Back/Chest Acne\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.dryskin}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.dryskin}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"dryskin\"\r\n                />\r\n              }\r\n              label=\"Dry Skin\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.wrinkles}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.wrinkles}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"wrinkles\"\r\n                />\r\n              }\r\n              label=\"Lines/Wrinkles\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.sebhorrea}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.sebhorrea}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"sebhorrea\"\r\n                />\r\n              }\r\n              label=\"Sebhorrea\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.puffy}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.puffy}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"puffy\"\r\n                />\r\n              }\r\n              label=\"Under-Eye Puffiness\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n            <FormControlLabel\r\n              value={props.state.capilaries}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.capilaries}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"capilaries\"\r\n                />\r\n              }\r\n              label=\"Telangiectasia (Broken Capilaries)s\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} lg={12}>\r\n        <p>Please list your primary concerns in order of priority</p>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"1.\"\r\n          onChange={props.onInputChange}\r\n          name=\"concern1\"\r\n          value={props.state.concern1}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"2.\"\r\n          onChange={props.onInputChange}\r\n          name=\"concern2\"\r\n          value={props.state.concern2}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"3.\"\r\n          onChange={props.onInputChange}\r\n          name=\"concern3\"\r\n          value={props.state.concern3}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Skin;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  FormControl,\r\n  RadioGroup,\r\n  Radio,\r\n} from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst Sun = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12}>\r\n        <h2 style={{ marginBottom: 0 }}>SUN EXPOSURE/REACTION</h2>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <p>How do you react to the sun?</p>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup\r\n            aria-label=\"position\"\r\n            defaultValue=\"top\"\r\n            name=\"sunReact\"\r\n            value={props.state.sunReact}\r\n            onChange={props.onInputChange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"Always burn, never tan\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Always burn, never tan\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Burn frst, tan with difficulty\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Burn frst, tan with difficulty\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Burn first, tan with ease\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Burn first, tan with ease\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Seldom burn, tan with ease\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Seldom burn, tan with ease\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Never burn, tan with ease\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Never burn, tan with ease\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <p>How dark can your skin turn?</p>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup\r\n            aria-label=\"position\"\r\n            defaultValue=\"top\"\r\n            name=\"darkSkin\"\r\n            value={props.state.darkSkin}\r\n            onChange={props.onInputChange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"Never tan, hardly ever\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Never tan, hardly ever\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Light tan, freckling only\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Light tan, freckling only\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Medium tan with difficulty\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Medium tan with difficulty\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Medium tan quickly\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Medium tan quickly\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Dark brown quickly\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Dark brown quickly\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <p>Have you blistered from a sunburn?</p>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup\r\n            aria-label=\"position\"\r\n            defaultValue=\"top\"\r\n            name=\"sunblister\"\r\n            value={props.state.sunblister}\r\n            onChange={props.onInputChange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"Yes\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Yes\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"No\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"No\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"What area?\"\r\n          onChange={props.onInputChange}\r\n          name=\"blisterArea\"\r\n          value={props.state.blisterArea}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <p>How do you tan?</p>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup\r\n            aria-label=\"position\"\r\n            defaultValue=\"top\"\r\n            name=\"tanhow\"\r\n            value={props.state.tanhow}\r\n            onChange={props.onInputChange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"Natural\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Natural\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Tanning Bed\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Tanning Bed\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={12} lg={12}>\r\n        <p>How often do you tan?</p>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup\r\n            row\r\n            aria-label=\"position\"\r\n            defaultValue=\"top\"\r\n            name=\"tanoften\"\r\n            value={props.state.tanoften}\r\n            onChange={props.onInputChange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"Never/Seldom\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Never/Seldom\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Sometimes\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Sometimes\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Often\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Often\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Year-round\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Year-round\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={12} lg={12}>\r\n        <p>What is your natural non-exposed skin color?</p>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup\r\n            row\r\n            aria-label=\"position\"\r\n            defaultValue=\"top\"\r\n            name=\"skincolor\"\r\n            value={props.state.skincolor}\r\n            onChange={props.onInputChange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"Reddish\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Reddish\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Very pale\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Very pale\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Pale with beige tint\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Pale with beige tint\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Olive\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Olive\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Light brown\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Light brown\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Dark brown\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Dark brown\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Black\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Black\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sun;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  FormControl,\r\n  RadioGroup,\r\n  Radio,\r\n} from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst Genetic = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12}>\r\n        <h2 style={{ marginBottom: 0 }}>GENETIC HISTORY</h2>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={12} lg={12}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"What is your ethnic background?\"\r\n          onChange={props.onInputChange}\r\n          name=\"ethnic\"\r\n          value={props.state.ethnic}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <p>Natural eye color</p>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup\r\n            aria-label=\"position\"\r\n            defaultValue=\"top\"\r\n            name=\"eyecolor\"\r\n            value={props.state.eyecolor}\r\n            onChange={props.onInputChange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"Light blue/green/grey\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Light blue/green/grey\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Green/grey\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Green/grey\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Blue\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Blue\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Brown/hazel\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Brown/hazel\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Dark brown/black\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Dark brown/black\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} md={6} lg={6}>\r\n        <p>Hair color</p>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup\r\n            aria-label=\"position\"\r\n            defaultValue=\"top\"\r\n            name=\"haircolor\"\r\n            value={props.state.haircolor}\r\n            onChange={props.onInputChange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"Sandy/Red\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Sandy/Red\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Blonde\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Blonde\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Chestnut/dark blonde\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Chestnut/dark blonde\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Dark brown\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Dark brown\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Black\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Black\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid item xs={12} sm={12} lg={7}>\r\n          <h3>\r\n            Periodically we run specials on Botox and Dermal Filler injections.\r\n            Would you like to be contacted by email regarding these promotions?\r\n          </h3>\r\n        </Grid>\r\n\r\n        <Grid xs={12} sm={12} lg={3}>\r\n          <Grid className=\"yesno\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                name=\"promotions\"\r\n                defaultValue=\"top\"\r\n                value={props.state.promotions}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Yes\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Yes\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"No\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        {props.state.promotions.length < 1 && props.firstSubmit === true ? (\r\n          <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid xs={12} sm={12} lg={7}>\r\n          <h3>\r\n            Would you like to be contacted by our Clinical Skin Care Therarpist\r\n            regarding assistance with your skin care?\r\n          </h3>\r\n        </Grid>\r\n\r\n        <Grid xs={12} sm={12} lg={3}>\r\n          <Grid className=\"yesno\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                name=\"skinCare\"\r\n                defaultValue=\"top\"\r\n                value={props.state.skinCare}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Yes\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Yes\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"No\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        {props.state.skinCare.length < 1 && props.firstSubmit === true ? (\r\n          <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid item lg={12}>\r\n        <h3>CONSENT</h3>\r\n        <p>\r\n          I agree that the information provided on my Medical Aesthetics\r\n          Consultation Form is complete and accurate to the best of my\r\n          knowledge. I realize that full and unqualified disclosure reduces risk\r\n          of mishap or injury and is key to the success and safety of my\r\n          treatment. I also agree to inform my Medical Aesthetician of any\r\n          changes to my health status or other information provided here. I\r\n          understand that strict compliance with the instructions of my Medical\r\n          Aesthetician will provide me the greatest likelihood of satisfactory\r\n          results.\r\n        </p>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Genetic;\r\n","import React, { useState } from \"react\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\nimport { Button, Grid, Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport StatePersonal from \"./statePersonal.js\";\r\n\r\nimport Personal from \"./components/Personal\";\r\nimport MedicalHistory from \"./components/MedicalHistory\";\r\nimport Lifestyle from \"./components/Lifestyle\";\r\nimport Skin from \"./components/Skin\";\r\nimport Sun from \"./components/Sun\";\r\nimport Genetic from \"./components/Genetic\";\r\n\r\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst Aesthetics = (props) => {\r\n  const [firstSubmit, setFirstSubmit] = useState(false);\r\n  const [done, setDone] = useState(false);\r\n  const [state, setState] = useState(StatePersonal);\r\n  const [result, setResult] = useState(null);\r\n  const [trimmedSignature, setTrimmedSignature] = useState({});\r\n  const classes = useStyles();\r\n\r\n  let sigPad = {};\r\n\r\n  const clear = () => {\r\n    sigPad.clear();\r\n    setTrimmedSignature({});\r\n  };\r\n\r\n  const trim = () => {\r\n    setTrimmedSignature(sigPad.getTrimmedCanvas().toDataURL(\"image/png\"));\r\n  };\r\n\r\n  const firstSubmitCheck = () => {\r\n    setFirstSubmit(true);\r\n  };\r\n\r\n  const sendEmail = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      state.name.length > 2 &&\r\n      state.name.length < 40 &&\r\n      state.dob.length === 10 &&\r\n      state.streetaddress.length > 5 &&\r\n      state.streetaddress.length < 50 &&\r\n      state.city.length > 4 &&\r\n      state.city.length < 50 &&\r\n      state.province.length > 2 &&\r\n      state.province.length < 40 &&\r\n      state.postal.length > 5 &&\r\n      state.postal.length < 9 &&\r\n      state.cellphone.length < 16\r\n    ) {\r\n      setDone(true);\r\n      axios\r\n        .post(\r\n          \"/aesthetics\",\r\n          {\r\n            ...state,\r\n            trimmedSignature,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          setResult(response.data);\r\n          setState(StatePersonal);\r\n          setDone(true);\r\n          props.setAestheticsDone(true);\r\n        })\r\n        .catch(() => {\r\n          setResult({\r\n            success: false,\r\n            message: \"Something went wrong. Try again later\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const onInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onCheck = (e) => {\r\n    const { name } = e.target;\r\n    setState((prevState) => ({ ...prevState, [name]: !prevState[name] }));\r\n  };\r\n  console.log(state);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {done ? (\r\n          <Grid lg={12} xs={12} sm={12} md={12}>\r\n            <div className=\"thankyou\">\r\n              <p className=\"thanks\">Thank you for your submission.</p>\r\n              <p className=\"donemessage\">\r\n                If you are finished filling out all required forms, please visit\r\n                our <a href=\"https://www.landingsurgery.ca/\">homepage</a> to\r\n                learn more.\r\n              </p>\r\n            </div>\r\n          </Grid>\r\n        ) : (\r\n          <div className={classes.root}>\r\n            {/* <form onSubmit={sendEmail}> */}\r\n            <ValidatorForm onSubmit={sendEmail}>\r\n              <Grid container spacing={6}>\r\n                <Grid item xs={12}>\r\n                  {result && (\r\n                    <p className={`${result.success ? \"success\" : \"error\"}`}>\r\n                      {result.message}\r\n                    </p>\r\n                  )}\r\n                  <h1 className=\"registration\">\r\n                    Medical Aesthetics Health History\r\n                  </h1>\r\n                </Grid>\r\n\r\n                <Personal onInputChange={onInputChange} state={state} />\r\n                <MedicalHistory\r\n                  onCheck={onCheck}\r\n                  onInputChange={onInputChange}\r\n                  state={state}\r\n                  firstSubmit={firstSubmit}\r\n                />\r\n                <Lifestyle\r\n                  onCheck={onCheck}\r\n                  onInputChange={onInputChange}\r\n                  state={state}\r\n                  firstSubmit={firstSubmit}\r\n                />\r\n\r\n                <Skin\r\n                  onCheck={onCheck}\r\n                  onInputChange={onInputChange}\r\n                  state={state}\r\n                  firstSubmit={firstSubmit}\r\n                />\r\n\r\n                <Sun\r\n                  onCheck={onCheck}\r\n                  onInputChange={onInputChange}\r\n                  state={state}\r\n                  firstSubmit={firstSubmit}\r\n                />\r\n                <Genetic\r\n                  onCheck={onCheck}\r\n                  onInputChange={onInputChange}\r\n                  state={state}\r\n                  firstSubmit={firstSubmit}\r\n                />\r\n                <Grid item xs={12}>\r\n                  <h3>\r\n                    Add your signature in the box below (as big as possible).\r\n                    Please use your mouse, or finger if you have a touch screen.\r\n                  </h3>\r\n                </Grid>\r\n                <Grid item lg={12} xs={12}>\r\n                  {firstSubmit === true && done === false ? (\r\n                    <h3 className=\"mainError\">\r\n                      Please scroll up to complete required fields.\r\n                    </h3>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <SignatureCanvas\r\n                    penColor=\"black\"\r\n                    canvasProps={{\r\n                      className: \"sigCanvas\",\r\n                    }}\r\n                    ref={(ref) => {\r\n                      sigPad = ref;\r\n                    }}\r\n                  />\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        padding: \"20px 30px\",\r\n                        marginTop: 50,\r\n                        marginBottom: 30,\r\n                        border: \"1px solid black\",\r\n                      }}\r\n                      onClick={clear}\r\n                    >\r\n                      Clear Signature\r\n                    </Button>\r\n                  </Grid>\r\n\r\n                  {/* {trimmedSignature ? <img src={trimmedSignature} /> : null} */}\r\n                </Grid>\r\n                <Grid item lg={12} xs={12}>\r\n                  {firstSubmit === true && done === false ? (\r\n                    <h3 className=\"mainError\">\r\n                      Please scroll up to complete required fields.\r\n                    </h3>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#6C0D0D\",\r\n                      padding: \"14px 14px\",\r\n                      marginBottom: \"100px\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        fontSize: \"20px\",\r\n                        color: \"white\",\r\n                        fontWeight: 600,\r\n                        border: \".5px solid hsla(0,0%,100%,.5)\",\r\n                        padding: \"14px 40px\",\r\n                        backgroundColor: \"#6C0D0D\",\r\n                      }}\r\n                      variant=\"primary\"\r\n                      type=\"submit\"\r\n                      onClick={() => {\r\n                        firstSubmitCheck();\r\n                        trim();\r\n                      }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n              {/* </form> */}\r\n            </ValidatorForm>\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Aesthetics;\r\n","import NewDate from \"../../utils/NewDate\";\r\nexport default {\r\n  date: NewDate(),\r\n  name: \"\",\r\n  address: \"\",\r\n  homePhone: \"\",\r\n  mobilePhone: \"\",\r\n  email: \"\",\r\n  std: false,\r\n  hiv: false,\r\n  mental: false,\r\n  disability: false,\r\n  substanceAbuse: false,\r\n  other: false,\r\n  otherDescription: \"\",\r\n};\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\nimport NewDate from \"../../../utils/NewDate\";\r\nconst Physicians = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h1>PHYSICIANS:</h1>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <h3>Dr. Richarch Bendor-Samuel, MD, FRCS(C)</h3>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <h3>Dr. Louis O. Boileau, BSc, MD, FRCS(C)</h3>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n        <p>\r\n          The Landings Surgical Center\r\n          <br />\r\n          1477 Lower Water Street, Suite 7A\r\n          <br />\r\n          Halifax, NS B3J 3Z2\r\n          <br />\r\n          Phone: (902) 492-2007 Fax: (902) 429-0887 Website:{\" \"}\r\n          <a href=\"https://www.landingsurgery.ca\">www.landingsurgery.ca</a>\r\n          <br />\r\n          Email:{\" \"}\r\n          <a href=\"mailto:info@landingsurgery.ca\">\r\n            info@landingsurgery.ca\r\n          </a>{\" \"}\r\n          <a href=\"mailto:admin@landingsurgery.ca\">admin@landingsurgery.ca</a>\r\n        </p>\r\n        <p>\r\n          The Physician has offered to communicate using the following means of\r\n          electronic communication (“the Services”):\r\n          <br />\r\n          1: Email\r\n          <br />\r\n          2: Video conferencing (including Skype®, FaceTime®, Zoom®)\r\n          <br />\r\n          3: Text messaging (including instant messaging)\r\n          <br />\r\n          4: Social media\r\n        </p>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Physicians;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\nimport NewDate from \"../../../utils/NewDate\";\r\nconst Patient = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h1>PATIENT ACKNOWLEDGMENT AND AGREEMENT:</h1>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n        <p>\r\n          I acknowledge that I have read and fully understand the risks,\r\n          limitations, conditions of use, and instructions for use of the\r\n          selected electronic communication Services more fully described in the\r\n          Appendix to this consent form. I understand and accept the risks\r\n          outlined in the Appendix to this consent form, associated with the use\r\n          of the Services in communications with the Physician and the\r\n          Physician’s staff. I consent to the conditions and will follow the\r\n          instructions outlined in the Appendix, as well as any other conditions\r\n          that the Physician may impose on communications with patients using\r\n          the Services.\r\n        </p>\r\n        <p>\r\n          I acknowledge and understand that despite recommendations that\r\n          encryption software be used as a security mechanism for electronic\r\n          communications, it is possible that communications with the Physician\r\n          or the Physician’s staff using the Services may not be encrypted.\r\n          Despite this, I agree to communicate with the Physician or the\r\n          Physician’s staff using these Services with a full understanding of\r\n          the risk.\r\n        </p>\r\n        <p>\r\n          I acknowledge that either I or the Physician may, at any time,\r\n          withdraw the option of communicating electronically through the\r\n          Services upon providing written notice. Any questions I had have been\r\n          answered.\r\n        </p>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Name\"\r\n          onChange={props.onInputChange}\r\n          name=\"name\"\r\n          value={props.state.name}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Name is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Address\"\r\n          onChange={props.onInputChange}\r\n          name=\"address\"\r\n          value={props.state.address}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Name is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Home Phone (include area code)\"\r\n          onChange={props.onInputChange}\r\n          name=\"homePhone\"\r\n          value={props.state.homePhone}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:16\"]}\r\n          errorMessages={[\r\n            \"Enter your home phone number with area code\",\r\n            \"Too long\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Mobile Phone (include area code)\"\r\n          onChange={props.onInputChange}\r\n          name=\"mobilePhone\"\r\n          value={props.state.mobilePhone}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:16\"]}\r\n          errorMessages={[\"Enter a valid phone number\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Email\"\r\n          onChange={props.onInputChange}\r\n          name=\"email\"\r\n          value={props.state.email}\r\n          validators={[\r\n            \"required\",\r\n            \"isEmail\",\r\n            \"minStringLength:9\",\r\n            \"maxStringLength:40\",\r\n          ]}\r\n          errorMessages={[\r\n            \"This field is required\",\r\n            \"email is not valid\",\r\n            \"email is not valid\",\r\n            \"email is too long\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Patient;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\nimport NewDate from \"../../../utils/NewDate\";\r\nconst Appendix = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h1>APPENDIX</h1>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n        <p style={{ fontWeight: \"bold\" }}>\r\n          Risks of using electronic communication\r\n        </p>\r\n        <p>\r\n          The Physician will use reasonable means to protect the security and\r\n          confidentiality of information sent and received using the Services\r\n          (“Services” is defined in the attached Consent to use electronic\r\n          communications). However, because of the risks outlined below, the\r\n          Physician cannot guarantee the security and confidentiality of\r\n          electronic communications:\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            Use of electronic communications to discuss sensitive information\r\n            can increase the risk of such information being disclosed to third\r\n            parties.\r\n          </li>\r\n          <li>\r\n            Despite reasonable efforts to protect the privacy and security of\r\n            electronic communication, it is not possible to completely secure\r\n            the information.\r\n          </li>\r\n          <li>\r\n            Employers and on-line services may have a legal right to inspect and\r\n            keep electronic communications that pass through their system.{\" \"}\r\n          </li>\r\n          <li>\r\n            Electronic communications can introduce malware into a computer\r\n            system, and potentially damage or disrupt the computer, networks,\r\n            and security settings.{\" \"}\r\n          </li>\r\n          <li>\r\n            Electronic communications can be forwarded, intercepted, circulated,\r\n            stored, or even changed without the knowledge or permission of the\r\n            Physician or the patient.{\" \"}\r\n          </li>\r\n          <li>\r\n            ven after the sender and recipient have deleted copies of electronic\r\n            communications, back-up copies may exist on a computer system.{\" \"}\r\n          </li>\r\n          <li>\r\n            Electronic communications maybe disclosed in accordance with a duty\r\n            to report or a court order.{\" \"}\r\n          </li>\r\n          <li>\r\n            Video conferencing using services such as Skype, FaceTime or Zoom\r\n            may be more open to interception than other forms of video\r\n            conferencing.{\" \"}\r\n          </li>\r\n        </ul>\r\n\r\n        <p style={{ fontWeight: \"bold\" }}>\r\n          If the email or text is used as an e-communication tool, the following\r\n          are additional risks:\r\n        </p>\r\n\r\n        <ul>\r\n          <li>\r\n            Email, text messages, and instant messages can more easily be\r\n            misdirected, resulting in increased risk of being received by\r\n            unintended and unknown recipients.{\" \"}\r\n          </li>\r\n          <li>\r\n            Email, text messages, and instant messages can be easier to falsify\r\n            than handwritten or signed hard copies. It is not feasible to verify\r\n            the true identity of the sender, or to ensure that only the\r\n            recipient can read the message once it has been sent.{\" \"}\r\n          </li>\r\n        </ul>\r\n        <p style={{ fontWeight: \"bold\" }}>Conditions of using the Services</p>\r\n\r\n        <ul>\r\n          <li>\r\n            While the Physician, or the Physician’s staff, will attempt to\r\n            review and respond in a timely fashion to your electronic\r\n            communication, the Physician, or the Physician’s staff, cannot\r\n            guarantee that all electronic communications will be reviewed and\r\n            responded to within any specific period of time. The Services will\r\n            not be used for medical emergencies or other time-sensitive matters.{\" \"}\r\n          </li>\r\n          <li>\r\n            If your electronic communication requires or invites a response from\r\n            the Physician, or the Physician’s staff, and you have not received a\r\n            response within a reasonable time period, it is your responsibility\r\n            to follow up to determine whether the intended recipient received\r\n            the electronic communication and when the recipient will respond.{\" \"}\r\n          </li>\r\n          <li>\r\n            Electronic communication is not an appropriate substitute for\r\n            in-person or over-the-telephone communication or clinical\r\n            examinations, where appropriate, or for attending the Emergency\r\n            Department when needed. You are responsible for following up on the\r\n            Physician’s electronic communication and for scheduling appointments\r\n            where warranted.{\" \"}\r\n          </li>\r\n          <li>\r\n            Electronic communications concerning diagnosis or treatment may be\r\n            printed or transcribed in full and made part of your medical record.\r\n            Other individuals authorized to access the medical record, such as\r\n            staff and billing personnel, may have access to those\r\n            communications.{\" \"}\r\n          </li>\r\n          <li>\r\n            The Physician may forward electronic communications to staff and\r\n            those involved in the delivery and administration of your care. The\r\n            Physician might use one or more of the Services to communicate with\r\n            those involved in your care. The Physician will not forward\r\n            electronic communications to third parties, including family\r\n            members, without your prior written consent, except as authorized or\r\n            required by law.\r\n          </li>\r\n          <li>\r\n            You and the Physician will not use the Services to communicate\r\n            sensitive medical information about matters specified below\r\n            <br />\r\n            <br /> [check all that apply]:{\" \"}\r\n          </li>\r\n        </ul>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n        <div style={{ marginLeft: 40, marginTop: -20 }}>\r\n          <FormControl component=\"fieldset\" fullWidth>\r\n            <FormControlLabel\r\n              value={props.state.std}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.std}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"std\"\r\n                />\r\n              }\r\n              label=\"Sexually transmitted disease \"\r\n              labelPlacement=\"end\"\r\n            />\r\n            <FormControlLabel\r\n              value={props.state.hiv}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.hiv}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"hiv\"\r\n                />\r\n              }\r\n              label=\"AIDS/HIV\"\r\n              labelPlacement=\"end\"\r\n            />\r\n            <FormControlLabel\r\n              value={props.state.mental}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.mental}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"mental\"\r\n                />\r\n              }\r\n              label=\"Mental health\"\r\n              labelPlacement=\"end\"\r\n            />\r\n            <FormControlLabel\r\n              value={props.state.disability}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.disability}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"disability\"\r\n                />\r\n              }\r\n              label=\"Developmental disability\"\r\n              labelPlacement=\"end\"\r\n            />\r\n            <FormControlLabel\r\n              value={props.state.substanceAbuse}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.substanceAbuse}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"substanceAbuse\"\r\n                />\r\n              }\r\n              label=\"Substance Abuse\"\r\n              labelPlacement=\"end\"\r\n            />\r\n            <FormControlLabel\r\n              value={props.state.other}\r\n              control={\r\n                <Checkbox\r\n                  checked={props.state.other}\r\n                  color=\"primary\"\r\n                  onChange={props.onCheck}\r\n                  name=\"other\"\r\n                />\r\n              }\r\n              label=\"Other (specify):\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </FormControl>\r\n          <TextValidator\r\n            fullWidth\r\n            label=\"Specify\"\r\n            onChange={props.onInputChange}\r\n            name=\"otherDescription\"\r\n            value={props.state.otherDescription}\r\n            validators={[\"minStringLength:0\", \"maxStringLength:60\"]}\r\n            errorMessages={[\"\", \"Too long\"]}\r\n            inputProps={{ style: { fontSize: fontSize } }}\r\n            InputLabelProps={{ style: { fontSize: fontSize } }}\r\n          />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n        <ul>\r\n          <li>\r\n            You agree to inform the Physician of any types of information you do\r\n            not want sent via the Services, in addition to those set out above.\r\n            You can add to or modify the above list at any time by notifying the\r\n            Physician in writing.\r\n          </li>\r\n          <li>\r\n            Some Services might not be used for therapeutic purposes or to\r\n            communicate clinical information. Where applicable, the use of these\r\n            Services will be limited to education, information, and\r\n            administrative purposes.\r\n          </li>\r\n          <li>\r\n            The Physician is not responsible for information loss due to\r\n            technical failures associated with your software or internet service\r\n            provider.\r\n          </li>\r\n        </ul>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n        <p style={{ fontWeight: \"bold\" }}>\r\n          Instructions for communication using the Service\r\n        </p>\r\n        <p>To communicate using the Services, you must:</p>\r\n        <ul>\r\n          <li>\r\n            Reasonably limit or avoid using an employer’s or other third party’s\r\n            computer.{\" \"}\r\n          </li>\r\n          <li>\r\n            Inform the Physician of any changes in the patient’s email address,\r\n            mobile phone number, or other account information necessary to\r\n            communicate via the Services.{\" \"}\r\n          </li>\r\n        </ul>\r\n        <p style={{ fontWeight: \"bold\" }}>\r\n          If the Services include email, instant messaging and/or text\r\n          messaging, the following applies:\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            Include in the message’s subject line an appropriate description of\r\n            the nature of the communication, and your full name in the body of\r\n            the message.{\" \"}\r\n          </li>\r\n          <li>\r\n            Review all electronic communications to ensure they are clear and\r\n            that all relevant information is provided before sending to the\r\n            physician.{\" \"}\r\n          </li>\r\n          <li>\r\n            Ensure the Physician is aware when you receive an electronic\r\n            communication from the Physician, such as by a reply message or\r\n            allowing “read receipts” to be sent.{\" \"}\r\n          </li>\r\n          <li>\r\n            Take precautions to preserve the confidentiality of electronic\r\n            communications, such as using screen savers and safeguarding\r\n            computer passwords.{\" \"}\r\n          </li>\r\n          <li>\r\n            Withdraw consent only by email or written communication to the\r\n            Physician.{\" \"}\r\n          </li>\r\n          <li>\r\n            <strong>\r\n              If you require immediate assistance, or if your condition appears\r\n              serious or rapidly worsens, you should not rely on the Services.\r\n            </strong>\r\n            Rather, you should call the Physician’s office or take other\r\n            measures as appropriate, such as going to the nearest Emergency\r\n            Department or urgent care clinic.\r\n          </li>\r\n          <li>Other conditions of use in addition to those set out above.</li>\r\n        </ul>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Appendix;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Container, Button } from \"@material-ui/core\";\r\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport axios from \"axios\";\r\nimport State from \"./state.js\";\r\nimport Physicians from \"./components/Physicians\";\r\nimport Patient from \"./components/Patient\";\r\nimport Appendix from \"./components/Appendix\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst Consent = (props) => {\r\n  const [state, setState] = useState(State);\r\n  const [done, setDone] = useState(false);\r\n  const [firstSubmit, setFirstSubmit] = useState(false);\r\n  const classes = useStyles();\r\n  const [trimmedSignature, setTrimmedSignature] = useState({});\r\n  const [result, setResult] = useState(null);\r\n\r\n  let sigPad = {};\r\n\r\n  const clear = () => {\r\n    sigPad.clear();\r\n    setTrimmedSignature({});\r\n  };\r\n\r\n  const trim = () => {\r\n    setTrimmedSignature(sigPad.getTrimmedCanvas().toDataURL(\"image/png\"));\r\n  };\r\n\r\n  const onInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n    console.log(\"name: \", name, \"value: \", value);\r\n  };\r\n\r\n  const onCheck = (e) => {\r\n    const { name } = e.target;\r\n    setState((prevState) => ({ ...prevState, [name]: !prevState[name] }));\r\n  };\r\n\r\n  const firstSubmitCheck = (e) => {\r\n    setFirstSubmit(true);\r\n  };\r\n\r\n  const sendEmail = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (state.name.length > 2 && state.name.length < 40) {\r\n      setDone(true);\r\n      axios\r\n        .post(\"/consent\", { ...state, trimmedSignature })\r\n        .then((response) => {\r\n          setResult(response.data);\r\n          setState(State);\r\n          setDone(true);\r\n          props.setConsentDone(true);\r\n        })\r\n        .catch(() => {\r\n          setResult({\r\n            success: false,\r\n            message: \"Something went wrong. Try again later\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n  console.log(\"STATE\", state);\r\n  return (\r\n    <Container>\r\n      {done ? (\r\n        <Grid lg={12} xs={12} sm={12} md={12}>\r\n          <div className=\"thankyou\">\r\n            <p className=\"thanks\">Thank you for your submission.</p>\r\n            <p className=\"donemessage\">\r\n              If you are finished filling out all required forms, please visit\r\n              our <a href=\"https://www.landingsurgery.ca/\">homepage</a> to learn\r\n              more.\r\n            </p>\r\n          </div>\r\n        </Grid>\r\n      ) : (\r\n        <div className={classes.root}>\r\n          <Grid item xs={12}>\r\n            <h1 className=\"registration title\">\r\n              Consent to use Electronic Communication\r\n            </h1>\r\n          </Grid>\r\n          <ValidatorForm onSubmit={sendEmail}>\r\n            <Grid container spacing={6}>\r\n              <Grid item xs={12}>\r\n                {result && (\r\n                  <p className={`${result.success ? \"success\" : \"error\"}`}>\r\n                    {result.message}\r\n                  </p>\r\n                )}\r\n              </Grid>\r\n\r\n              <Physicians />\r\n              <Patient state={state} onInputChange={onInputChange} />\r\n              <Appendix\r\n                state={state}\r\n                onCheck={onCheck}\r\n                onInputChange={onInputChange}\r\n              />\r\n              {/* <Physicians\r\n                onInputChange={onInputChange}\r\n                onCheck={onCheck}\r\n                state={state}\r\n              /> */}\r\n\r\n              <Grid item xs={12}>\r\n                <h3>\r\n                  Add your signature in the box below (as big as possible).\r\n                  Please use your mouse, or finger if you have a touch screen.\r\n                </h3>\r\n\r\n                <h3>\r\n                  I have reviewed and understand all of the risks, conditions,\r\n                  and instructions described in this Appendix.{\" \"}\r\n                </h3>\r\n              </Grid>\r\n              <Grid item lg={12} xs={12}>\r\n                {firstSubmit === true && done === false ? (\r\n                  <h3 className=\"mainError\">\r\n                    Please scroll up to complete required fields.\r\n                  </h3>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <SignatureCanvas\r\n                  penColor=\"black\"\r\n                  minWidth={3}\r\n                  maxWidth={3}\r\n                  canvasProps={{\r\n                    className: \"sigCanvas\",\r\n                  }}\r\n                  ref={(ref) => {\r\n                    sigPad = ref;\r\n                  }}\r\n                />\r\n\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      padding: \"20px 30px\",\r\n                      marginTop: 50,\r\n                      marginBottom: 30,\r\n                      border: \"1px solid black\",\r\n                    }}\r\n                    onClick={clear}\r\n                  >\r\n                    Clear Signature\r\n                  </Button>\r\n                </Grid>\r\n\r\n                {/* {trimmedSignature ? <img src={trimmedSignature} /> : null} */}\r\n              </Grid>\r\n              <Grid item lg={12} xs={12}>\r\n                {firstSubmit === true && done === false ? (\r\n                  <h3 className=\"mainError\">\r\n                    Please scroll up to complete required fields.\r\n                  </h3>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#6C0D0D\",\r\n                    padding: \"14px 14px\",\r\n                    marginBottom: \"100px\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      fontSize: \"20px\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      border: \".5px solid hsla(0,0%,100%,.5)\",\r\n                      padding: \"14px 40px\",\r\n                      backgroundColor: \"#6C0D0D\",\r\n                    }}\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    onClick={() => {\r\n                      firstSubmitCheck();\r\n                      trim();\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </ValidatorForm>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Consent;\r\n","import React from \"react\";\r\nimport Registration from \"./registration\";\r\nimport Covid from \"./covid\";\r\nimport Aesthetics from \"./aesthetics\";\r\nimport Consent from \"./consent\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst Forms = () => {\r\n  const [covidDone, setCovidDone] = React.useState(false);\r\n  const [registrationDone, setRegistrationDone] = React.useState(false);\r\n  const [aestheticsDone, setAestheticsDone] = React.useState(false);\r\n  const [consentDone, setConsentDone] = React.useState(false);\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n  let covidTab = covidDone ? (\r\n    <FontAwesomeIcon icon={faCheck} size=\"lg\" />\r\n  ) : (\r\n    \"Covid Assessment\"\r\n  );\r\n\r\n  let regTab = registrationDone ? (\r\n    <FontAwesomeIcon icon={faCheck} size=\"lg\" />\r\n  ) : (\r\n    \"Registration\"\r\n  );\r\n\r\n  let aestheticTab = aestheticsDone ? (\r\n    <FontAwesomeIcon icon={faCheck} size=\"lg\" />\r\n  ) : (\r\n    \"Aesthetic History\"\r\n  );\r\n  let consentTab = consentDone ? (\r\n    <FontAwesomeIcon icon={faCheck} size=\"lg\" />\r\n  ) : (\r\n    \"Consent\"\r\n  );\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Container>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"full width tabs example\"\r\n            centered\r\n          >\r\n            <Tab label={consentTab} {...a11yProps(0)} />\r\n            <Tab label={covidTab} {...a11yProps(1)} />\r\n            <Tab label={regTab} {...a11yProps(2)} />\r\n            <Tab label={aestheticTab} {...a11yProps(3)} />\r\n          </Tabs>\r\n        </Container>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <Consent setConsentDone={setConsentDone} />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          <Covid setCovidDone={setCovidDone} />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          <Registration setRegistrationDone={setRegistrationDone} />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3} dir={theme.direction}>\r\n          <Aesthetics setAestheticsDone={setAestheticsDone} />\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forms;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className=\"footer\"\r\n    >\r\n      <p className=\"footerp\">©2007 - 2020 The Landings Surgical Centre </p>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Header from \"./components/header/Header\";\r\nimport Forms from \"./forms/index\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport \"./app.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"body\">\r\n      <Header />\r\n      <Forms />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_ADDRESS;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/landings-logo.5ed104df.svg\";"],"sourceRoot":""}